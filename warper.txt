//===== rAthena Script ============================================
//= Quest Warper Script
//===== By: =======================================================
//= DZeroX, Darkchild, Neouni
//= Re-written completely by PottScilgrim for BlitzRO
//===== Current Version: ==========================================
//= 3.0
//===== Compatible With: ==========================================
//= rAthena Project
//===== Description: ==============================================
//= Warper that works only after locations are unlocked.
//= New features include:
//=		- 	Unlocking locations by simply being near the unlock NPC
//=		- 	Redeemable items to unlock locations at will
//=		- 	Modification from arrays to bitmasks for ease of 
//=			future expansion
//=================================================================

//========================Function=&=Script========================

function	script	Q_Warpra	{

	if(#warpraunlock == 1){ set #warpraunlock,0; }

	if(!#warpra && !#warprafull){
		set ##QWS_T_Unlock,1379962950;
		set ##QWS_D_Unlock,50332680;
		set #warpra,1; 
	}
	
	set @acctid,getcharid(3);
	if(@acctid >= 2000000 && @acctid <= 2000036 && !#warprafull){
		set ##QWS_T_Unlock,2147483647;
		set ##QWS_D_Unlock,34359738367;
		set #warprafull,1;
	}
	
	cutin "kafra_08",2;
	mes "[^004bedBlitzRO Warpra^000000]";
	mes "Hello,";
	mes "I can warp you to any town or dungeon, but you need to unlock them first by visiting us.";
	mes "What do you need?";

	
	if(getarg(0) == 0) callfunc "QWS_MMarray",0;
	if(getarg(0) == 1) callfunc "QWS_MMarray",1;
	
	set @MMenu,select(@Mmenulist$[0],@Mmenulist$[1],@Mmenulist$[2],@Mmenulist$[3],@Mmenulist$[4],@Mmenulist$[5],@Mmenulist$[6],@Mmenulist$[7],@Mmenulist$[8],@Mmenulist$[9],@Mmenulist$[10],@Mmenulist$[11],@Mmenulist$[12]);

	switch(@Mmenuref[@MMenu-1]+1){
	case 1: goto GM_Menu;
	case 2: goto L_lastwarp;
	case 3: goto L_town;
	case 4: goto L_dungeon;
	case 5: goto L_redeem;
	case 6: goto L_mvpwarp;
	case 7: goto L_FewWarps;
	case 8: goto L_NoUnlock;
	case 9: goto L_heal_Full;
	case 10: goto L_heal_Part;
	case 11: goto L_Storage;
	case 12: goto L_GStorage;
	case 13:
	default:
		goto L_end;
	}

//=====================GM-Menu=Functions===========================

GM_Menu:
	next;
	mes "Last Warp function = "+(($QW_LASTW_OFF)?"^FF0000 Off":"^00FF00 On")+"^000000";
	mes "Town warping = "+(($QW_TW_OFF)?"^FF0000 Off":"^00FF00 On")+"^000000";
	mes "Dungeon warping = "+(($QW_DW_OFF)?"^FF0000 Off":"^00FF00 On")+"^000000";
	mes "Dungeon Depth limit is "+(($QW_DL)?"^00FF00 On":"^FF0000 Off")+"^000000";
	mes "If on Dungeon Depth limit is set to ^0000FF"+$QW_DDL+"^000000";
	mes "MVP Warp = "+(($QW_MVPW_OFF)?"^FF0000 Off":"^00FF00 On")+"^000000";
	mes "Show Map Users = "+(($QW_MapUserShow)?"^00FF00 On":"^FF0000 Off")+"^000000";

	if ($QW_HF) mes "Healing full = ^00FF00 On ^000000";
	if ($QW_HP) mes "Healing partly = ^00FF00 On ^000000";
	if (!$QW_HF && !$QW_HP) mes "Healing = ^FF0000 Off ^000000";

	mes "Storage = "+(($QW_Stor)?"^00FF00 On":"^FF0000 Off")+"^000000";
	mes "Guild Storage = "+(($QW_GStor)?"^00FF00 On":"^FF0000 Off")+"^000000";
	mes "Kafra points collect = "+(($QW_KPoint)?"^00FF00 On":"^FF0000 Off")+"^000000";

	switch(select("Last Warp function","Town Warping","Dungeon Warping","Dungeon Level Limit","MVP Warp","Show Map Users","Healing full","Healing partly","Storage","Guild Storage","Kafra points collect","Set Prices","Special Warp","Exit")) {
	case 1: set $QW_LASTW_OFF,($QW_LASTW_OFF)?0:1; goto GM_Menu;
	case 2: set $QW_TW_OFF,($QW_TW_OFF)?0:1; goto GM_Menu;
	case 3: set $QW_DW_OFF,($QW_DW_OFF)?0:1; goto GM_Menu;
	case 4: goto DungeonLevelLimit;
	case 5: set $QW_MVPW_OFF, ($QW_MVPW_OFF)?0:1; goto GM_Menu;
	case 6: set $QW_MapUserShow,($QW_MapUserShow)?0:1; goto GM_Menu;
	case 7:
		if ($QW_HF == 0) {
			set $QW_HF,1;
			set $QW_HP,0;
		}
		else set $QW_HF,0;
		goto GM_Menu;
	case 8:
		if ($QW_HP == 0) {
			set $QW_HP,1;
			set $QW_HF,0;
		}
		else set $QW_HP,0;
		goto GM_Menu;
	case 9: set $QW_Stor,($QW_Stor)?0:1; goto GM_Menu;
	case 10: set $QW_GStor,($QW_GStor)?0:1; goto GM_Menu;
	case 11: set $QW_KPoint,($QW_KPoint)?0:1; goto GM_Menu;
	case 12: goto Setprice;
	case 13: goto SpecialWarpMenu;
	default:
		close;
		end;
	}

//======================GM-Menu=Pricing============================

Setprice:
	if ($QW_DW_FEE != 0) set $QW_DW_FEE,0;
	next;
	mes "Scroll through the list to see all the options.";

	mes "Basic - Warps are = "+(($QW_BW_PRICE)?"^00FF00"+$QW_BW_PRICE:"^FF0000Free")+"^000000";
	mes "Advanced - Warps are = "+(($QW_AW_PRICE)?"^00FF00"+$QW_AW_PRICE:"^FF0000Free")+"^000000";
	mes "Overseas - Warps are = "+(($QW_OW_PRICE)?"^00FF00"+$QW_OW_PRICE:"^FF0000Free")+"^000000";

	mes "Basic Dungeon level warp fee = "+(($QW_BW_FEE)?"^00FF00"+$QW_BW_FEE:"^FF0000NO")+"^000000 zeny per level";
	mes "Advanced Dungeon level warp fee = "+(($QW_AW_FEE)?"^00FF00"+$QW_AW_FEE:"^FF0000NO")+"^000000 zeny per level";
	mes "Overseas Dungeon level warp fee = "+(($QW_OW_FEE)?"^00FF00"+$QW_OW_FEE:"^FF0000NO")+"^000000 zeny per level";

	mes "Full Healing = "+(($QW_HF_PRICE)?"^00FF00"+$QW_HF_PRICE:"^FF0000Free")+"^000000";
	mes "^FF0000HP ^000000Part Healing = "+(($QW_HP_H_PRICE)?"^00FF00"+$QW_HP_H_PRICE+"^000000 a point":"^FF0000Free^000000");
	mes "^FF0000SP ^000000Part Healing = "+(($QW_HP_S_PRICE)?"^00FF00"+$QW_HP_S_PRICE+"^000000 a point":"^FF0000Free^000000");

	if ($QW_S_PRICE && $QW_S_PRICE != 60) mes "Storage = ^00FF00 "+$QW_S_PRICE+" ^000000";
	if (!$QW_S_PRICE) mes "Storage = ^FF0000 Free ^000000";
	if ($QW_S_PRICE == 60) mes "Storage = ^0000FF Kafra Mode ^000000";
	mes "Guild Storage = "+(($QW_GS_PRICE)?"^00FF00"+$QW_GS_PRICE:"^FF0000Free")+"^000000";
	
	switch(select("Basic - Warps","Advanced - Warps","Overseas - Warps","Basic Dungeon warp fee","Advanced Dungeon warp fee","Overseas Dungeon warp fee","Full Healing","Part Healing","Storage","Guild Storage","Back","Exit")) {
	case 1:
		next;
		mes "Basic - Warps are = "+(($QW_BW_PRICE)?"^00FF00"+$QW_BW_PRICE:"^FF0000Free")+"^000000";
		mes "Basic - Warps are starter towns and related dungeons.";
		input $QW_BW_PRICE;
		goto Setprice;
	case 2:
		next;
		mes "Advanced - Warps are = "+(($QW_AW_PRICE)?"^00FF00"+$QW_AW_PRICE:"^FF0000Free")+"^000000";
		mes "Advanced - Warps are towns and dungeons on the same island but not close to any starter town.";
		input $QW_AW_PRICE;
		goto Setprice;
	case 3:
		next;
		mes "Overseas - Warps are = "+(($QW_OW_PRICE)?"^00FF00"+$QW_OW_PRICE:"^FF0000Free")+"^000000";
		mes "Overseas - Warps are towns and dungeons overseas reachable by boat from Alberta.";
		input $QW_OW_PRICE;
		goto Setprice;
	case 4:
		next;
		mes "Basic Dungeon level warp fee = "+(($QW_BW_FEE)?"^00FF00"+$QW_BW_FEE:"^FF0000NO")+"^000000 zeny per level";
		mes "Basic - Warps are starter town related dungeons.";
		mes "Dungeon warp fees are calculated by maps away from entrance of the dungeon times Dungeon warp fee.";
		mes "These costs are on top of the regular Warp costs.";
		input $QW_BW_FEE;
		goto Setprice;
	case 5:
		next;
		mes "Advanced Dungeon level warp fee = "+(($QW_AW_FEE)?"^00FF00"+$QW_AW_FEE:"^FF0000NO")+"^000000 zeny per level";
		mes "Advanced - Warps are dungeons not close to any starter town.";
		mes "Dungeon warp fees are calculated by maps away from entrance of the dungeon times Dungeon warp fee.";
		mes "These costs are on top of the regular Warp costs.";
		input $QW_AW_FEE;
		goto Setprice;
	case 6:
		next;
		mes "Overseas Dungeon level warp fee = "+(($QW_OW_FEE)?"^00FF00"+$QW_OW_FEE:"^FF0000NO")+"^000000 zeny per level";
		mes "Overseas - Warps are dungeons related to towns overseas reachable by boat from Alberta.";
		mes "Dungeon warp fees are calculated by maps away from entrance of the dungeon times Dungeon warp fee.";
		mes "These costs are on top of the regular Warp costs.";
		input $QW_OW_FEE;
		goto Setprice;
	case 7:
		next;
		mes "Full Healing = "+(($QW_HF_PRICE)?"^00FF00"+$QW_HF_PRICE:"^FF0000Free")+"^000000";
		mes "Instant full healing 1 price.";
		input $QW_HF_PRICE;
		goto Setprice;
	case 8:
		next;
		mes "^FF0000HP ^000000Part Healing = "+(($QW_HP_H_PRICE)?"^00FF00"+$QW_HP_H_PRICE+"^000000 a point":"^FF0000Free^000000");
		mes "^FF0000SP ^000000Part Healing = "+(($QW_HP_S_PRICE)?"^00FF00"+$QW_HP_S_PRICE+"^000000 a point":"^FF0000Free^000000");
		mes "Healing price per 1 HP.";
		mes "Healing price per 1 SP.";
		mes "2 inputs, first HP then SP.";
		input $QW_HP_H_PRICE;
		input $QW_HP_S_PRICE;
		goto Setprice;
	case 9:
		next;
		if ($QW_S_PRICE && $QW_S_PRICE != 60) mes "Storage = ^00FF00 "+$QW_S_PRICE+" ^000000";
		if (!$QW_S_PRICE) mes "Storage = ^FF0000 Free ^000000";
		if ($QW_S_PRICE == 60) mes "Storage = ^0000FF Kafra Mode ^000000";
		mes "Storage cost, if set to 60 Kafra pricing will be handled.";
		input $QW_S_PRICE;
		goto Setprice;
	case 10:
		next;
		mes "Guild Storage = "+(($QW_GS_PRICE)?"^00FF00"+$QW_GS_PRICE:"^FF0000Free")+"^000000";
		mes "Guild Storage, free on Guild Kafras.";
		input $QW_GS_PRICE;
		goto Setprice;
	case 11:
		goto GM_Menu;
	default:
		close;
		end;
	}

//======================Special=Warp=Menu==========================

SpecialWarpMenu:
	if ($QW_SP_Warpname$ == "") set $QW_SP_Warpname$,"Special Warp";
	next;
	mes "Scroll down to see all the information";
	mes "The Special warp menu option will show in the main menu when all towns & dungeons are unlocked";
	mes "And when the map for special warping has been set";
	mes "menu option name set to ^0000FF"+$QW_SP_Warpname$+"^000000";
	if ($QW_SP_WarpMap$ == "") mes "map is currently ^FF0000not^000000 set, and Special warp menu is off";
	if ($QW_SP_WarpMap$ != "") mes "map is currently set to ^0000FF"+$QW_SP_WarpMap$+"^000000 and Special Warp menu is on";
	mes "coords are set to ^0000FF"+$QW_SP_WarpX+","+$QW_SP_WarpY+"^000000";
	switch(select("Set Special Warp name to show in menu", "Set WarpMap","Set Coords","Go Back to GM_Menu","Exit")){
	case 1:
		next;
		mes "Set the name to show in the menu as option.";
		input $QW_SP_Warpname$;
		goto SpecialWarpMenu;
	case 2:
		next;
		mes "Set the map in the ^0000FFmapname^000000 format.";
		mes "When this warpmap is set the option for players will show once they meet the requirements.";
		mes "To disable Special Warp Menu option, clear this!";
		input $QW_SP_WarpMap$;
		goto SpecialWarpMenu;
	case 3:
		next;
		mes "First input = Xcoord";
		mes "Second input = Ycoord";
		input $QW_SP_WarpX;
		input $QW_SP_WarpY;
		goto SpecialWarpMenu;
	case 4:
		goto GM_Menu;
	default:
		close;
		end;
	}

//======================Dungeon=Level=Limit========================

DungeonLevelLimit:
	next;
	mes "Dungeon Depth limit is "+(($QW_DL)?"^00FF00On":"^FF0000Off")+"^000000";
	mes "If^00FF00 On ^000000Dungeon Depth limit is set to ^0000FF"+$QW_DDL+"^000000";

	switch(select("Toggle Dungeon Depth Limit","Set Dungeon Depth Limit","Go Back to GM_Menu","Exit")){
	case 1: set $QW_DL,($QW_DL)?0:1; goto DungeonLevelLimit;
	case 2:
		next;
		mes "Set limit of Dungeon Depth 0 = entrance";
		mes "Depth 1 is a map connected to 0 and so on";
		mes "Shortest Route to map counts as depth";
		input $QW_DDL;
		goto DungeonLevelLimit;
	case 3: goto GM_Menu;
	default:
		close;
		end;
	}

//===========================Towns=================================

L_town:
	callfunc "QWS_Tarray",2;
	freeloop(1);
	set .@menu$,"";
	for(set .@i,0; .@i<35; set .@i,.@i+1)	// Expected maximum is 35
		set .@menu$,.@menu$+@Tmenulist$[.@i]+":";
	freeloop(0);
	set @TWMenu,select(.@menu$);

	if (@Tmenuref[@TWMenu-1] == 57005) goto L_end; // 57005='dead' in hex

	if(Zeny<@pTprice[@Tmenuref[@TWMenu-1]]) callsub L_Short_on_zeny,0;
	set Zeny, Zeny-@pTprice[@Tmenuref[@TWMenu-1]];
	if ($QW_KPoint == 1) set RESRVPTS, RESRVPTS + (@pTprice[@Tmenuref[@TWMenu-1]]/16);
	specialeffect2 587;
	specialeffect2 589;
	sleep2 500;
	warp @pTmap$[@Tmenuref[@TWMenu-1]],@pTXcoords[@Tmenuref[@TWMenu-1]],@pTYcoords[@Tmenuref[@TWMenu-1]];
	close2;
	set Zeny, Zeny+@pTprice[@Tmenuref[@TWMenu-1]];
	end;

//=========================Dungeons================================

L_dungeon:
	callfunc "QWS_Darray",2;
	freeloop(1);
	set .@menu$,"";
	for(set .@i,0; .@i<35; set .@i,.@i+1)	// Expected maximum is 35
		set .@menu$,.@menu$+@Dmenulist$[.@i]+":";
	freeloop(0);
	set @DWMenu,select(.@menu$);

	if (@Dmenuref[@DWMenu-1] == 57005) goto L_end; // 57005='dead' in hex
	set @DwarpMenu, (@Dmenuref[@DWMenu-1]);
	callfunc "QWS_DLarray";

	clear;
	mes "[^004bedBlitzRO Warpra^000000]";
	mes "Please select where you want to go:";
	freeloop(1);
	set .@menu$,"";
	for(set .@i,0; .@i<18; set .@i,.@i+1)	// Expected maximum is 18
		set .@menu$,.@menu$+@DWLmenulist$[.@i]+":";
	freeloop(0);
	set @DWLMenu,select(.@menu$);

	if (@DWLmenuref[@DWLMenu-1] == 57005) goto L_end; // 57005='dead' in hex

	set @Darrayref, @DWLmenuref[@DWLMenu-1];
	set @warpprice, @pDprice[@Dmenuref[@DWMenu-1]]+(getd(@pDfee$[@Dmenuref[@DWMenu-1]])*(@DDepth[@Darrayref]));

	if(Zeny<@warpprice) callsub L_Short_on_zeny,1;
	set Zeny, Zeny-(@warpprice);
	if ($QW_KPoint == 1) set RESRVPTS, RESRVPTS + (@warpprice/16);
	specialeffect2 587;
	specialeffect2 589;
	sleep2 500;
	
		set lastwarp$, @DGat$[@Darrayref];
		set lastwarpx, @DXcoords[@Darrayref];
		set lastwarpy, @DYcoords[@Darrayref];
		set lastwarpz, @warpprice;
	
	warp @DGat$[@Darrayref],@DXcoords[@Darrayref],@DYcoords[@Darrayref];
	close2;
	set Zeny, Zeny+@pTprice[@Tmenuref[@DWMenu-1]];
	end;
	
	
L_redeem:
	clear;
	mes "[^004bedBlitzRO Warpra^000000]";
	if(!countitem(30042)){
	mes "You don't seem to have any Unlock Tickets, sorry!"; 
	close;
	} else {
		mes "You can redeem Unlock Tickets to unlock any locked location!";
		mes "You have [^FF0000"+countitem(30042)+"^000000] tickets.";
		switch(select("Unlock a Town:Unlock a Dungeon:[^FF0000Cancel^000000]")){
			case 1:
				deletearray @TmenulistUnl$[0],36;
				deletearray @TmenurefUnl[0],36;
				callfunc "QWS_Tarray",1;
				freeloop(1);
				set .@menuUnl$,"";
				for(set .@i,0; .@i<35; set .@i,.@i+1)	// Expected maximum is 35
					set .@menuUnl$,.@menuUnl$+@TmenulistUnl$[.@i]+":";
				freeloop(0);
				set @TWMenu,select(.@menuUnl$);
				
				if (@TmenurefUnl[@TWMenu-1] == 57005) goto L_end; // 57005='dead' in hex
				
				clear;
				mes "[^004bedBlitzRO Warpra^000000]";
				mes "Unlock: "+@pTmenuitemsUnl$[@TmenurefUnl[@TWMenu-1]]+"?";
					switch(select("Yes:No")){
						case 1:
							clear;
							delitem 30042,1;
							callfunc "QWS_Town_Warpra",@pTunlockRef[@TmenurefUnl[@TWMenu-1]],@pTmenuitemsUnl$[@TmenurefUnl[@TWMenu-1]]; 
							close;
						case 2:
							close;
					}
			case 2:
				deletearray @DmenulistUnl$[0],36;
				deletearray @DmenurefUnl[0],36;
				callfunc "QWS_Darray",1;
				freeloop(1);
				set .@menuUnl$,"";
				for(set .@i,0; .@i<36; set .@i,.@i+1)	// Expected maximum is 36
					set .@menuUnl$,.@menuUnl$+@DmenulistUnl$[.@i]+":";
				freeloop(0);
				set @DWMenu,select(.@menuUnl$);
				
				if (@DmenurefUnl[@DWMenu-1] == 57005) goto L_end; // 57005='dead' in hex
				
				clear;
				mes "[^004bedBlitzRO Warpra^000000]";
				mes "Unlock: "+@pDmenuitemsUnl$[@DmenurefUnl[@DWMenu-1]]+"?";
					switch(select("Yes:No")){
						case 1:
							clear;
							delitem 30042,1;
							callfunc "QWS_Dungeon_Warpra",@pDunlockRef[@DmenurefUnl[@DWMenu-1]],@pDmenuitemsUnl$[@DmenurefUnl[@DWMenu-1]]; 
							close;
						case 2:
							close;
					}
				close;
			default:
				close;
		}
	}

L_mvpwarp:
	clear;
	if (instance_live_info(ILI_NAME, instance_id(IM_CHAR)) == "MVP Arena") {
		mes "[^004bedBlitzRO Warpra^000000]";
		mes "Have fun!";
		emotion ET_HO;
		specialeffect2 587;
		specialeffect2 589;
		sleep2 500;
		instance_enter("MVP Arena",-1,-1,getcharid(0),@create);
		close;
	} else {
		mes "[^004bedBlitzRO Warpra^000000]";
		mes "Would you like to rent a private MVP room for 1 hour for 10,000z?";
		switch(select("Yes [^5533FFRent MVP Room^000000]:[^FF0000Cancel^000000]")){
			case 1:
				break;
			case 2:
				close;
		}
		if(Zeny < 10000)callsub L_Short_on_zeny,5;
		Zeny = Zeny-10000;
		@create = instance_create("MVP Arena",IM_CHAR,getcharid(0));
		if(@create < 0){
			clear;
			mes .name$;
			switch(@create){
				case -1: mes "ERROR: Invalid type."; break;
				case -2: mes "ERROR: Party not found."; break;
				case -3: mes "ERROR: Instance already exists."; break;
				case -4: mes "ERROR: No free instances."; break;
			}
		}
		specialeffect2 587;
		specialeffect2 589;
		sleep2 500;
		instance_enter("MVP Arena",-1,-1,getcharid(0),@create);
		close;
	}
L_lastwarp:
	if(Zeny<lastwarpz) callsub L_Short_on_zeny,1;
	set Zeny, Zeny-(@warpprice);
	if ($QW_KPoint == 1) set RESRVPTS, RESRVPTS + (@warpprice/16);
		specialeffect2 587;
		specialeffect2 589;
		sleep2 500;
		warp lastwarp$,lastwarpx,lastwarpy;
		close;
//=============================Healing=============================

L_heal_Full:
	set @healfee, $QW_HF_PRICE;
	if(Zeny<@healfee) callsub L_Short_on_zeny,4;
	set Zeny, Zeny-@healfee;
	if ($QW_KPoint == 1) set RESRVPTS, RESRVPTS + (@healfee/500);
	clear;
	mes "[^004bedBlitzRO Warpra^000000]";
	mes "Close this window and I will heal you.";
	close2;
	percentheal 100,100;
	end;

L_heal_Part:
	set @healchoice,select("Full heal","Health Points only","Skill Points only","Exit");
	if (@healchoice == 1) callsub PHeal,1,1;
	if (@healchoice == 2) callsub PHeal,1,0;
	if (@healchoice == 3) callsub PHeal,0,1;
	goto L_end;
	
PHeal:
	next;
	set @Hp, MaxHp-Hp;
	set @Sp, MaxSp-Sp;
	set @HpPrice, @hp*$QW_HP_H_PRICE;
	set @SpPrice, @sp*$QW_HP_S_PRICE;
	mes "[^004bedBlitzRO Warpra^000000]";
	if(getarg(0) == 1) mes ""+@HpPrice+" Zeny for "+@Hp+" health points";
	if(getarg(1) == 1) mes ""+@SpPrice+" Zeny for "+@Sp+" skill points";
	set @total, @HpPrice+@SpPrice;
	mes "for a total of "+@total+" zeny";
    	if (select("Heal me","Let me see the choices again")==2) goto L_heal_Part;
    	
    	if(getarg(0) == 1)set @HpPrice, (MaxHp-Hp)*$QW_HP_H_PRICE;
	if(getarg(1) == 1)set @SpPrice, (MaxSp-Sp)*$QW_HP_S_PRICE;
	set @healfee, @HpPrice+@SpPrice;
	if (getarg(0) == 1)&&(getarg(1) == 1)&&(Zeny<@healfee) goto Zeny_Short_Both;
	if (getarg(0) == 1)&&(Zeny<@healfee) goto Zeny_short_HP;
	if (getarg(1) == 1)&&(Zeny<@healfee) goto Zeny_short_SP;
	set Zeny, Zeny-@healfee;
	if (getarg(0) == 1)&&(getarg(1) == 1) percentheal 100,100;
	if (getarg(0) == 1) percentheal 100,0;
	if (getarg(1) == 1) percentheal 0,100;
	close;
	end;

Zeny_Short_Both:
	mes "[^004bedBlitzRO Warpra^000000]";
	mes "Choose another option, you can afford both.";
	mes "I can heal as much as you can afford, too.";
	if (select("OK","Exit") == 2) goto L_end;
	goto PHeal;

Zeny_short_HP:
	mes "[^004bedBlitzRO Warpra^000000]";
	mes "Do you want me to partly heal your HP?";
	if (select("Yes","No") == 2) goto L_end;
	set @Hp, Zeny/$QW_HP_H_PRICE;
    	set @HpPrice, @Hp*$QW_HP_H_PRICE;
    	if (@Hp == 1) mes "You're not worth the effort.";
    	if (@Hp == 1) goto L_end;
    	set Zeny, Zeny-@HpPrice;
	heal @Hp,0;
	close;
	end;

Zeny_short_SP:
	mes "[^004bedBlitzRO Warpra^000000]";
	mes "Do you want me to partly heal your SP?";
	if (select("Yes","No") == 2) goto L_end;
	set @Sp, Zeny/$QW_HP_S_PRICE;
    	set @SpPrice, @Sp*$QW_HP_S_PRICE;
    	if (@Sp == 1) mes "You're not worth the effort.";
    	if (@Sp == 1) goto L_end;
    	set Zeny, Zeny-@SpPrice;
	heal 0,@Sp;
	close;
	end;

//=============================Storage=============================

L_Storage:
	next;
	if(!callfunc("F_CanOpenStorage")) goto L_StorageJBlow;
	set @fee, $QW_S_PRICE;
	if ($QW_S_PRICE == 60)&&(BaseJob == Job_Novice) set @fee, 30;
	if ($QW_S_PRICE == 60)&&(BaseJob != Job_Novice) set @fee, 60;
	if(Zeny<@fee) callsub L_Short_on_zeny,2;
	set Zeny, Zeny-@fee;
	if ($QW_KPoint == 1) set RESRVPTS, RESRVPTS + (@fee/5);

	mes "[^004bedBlitzRO Warpra^000000]";
	if(#kafra_code) {
		mes "Enter your storage password:";
		set @code_,0;
		input @code_;
		if(@code_ != #kafra_code) {
			dispbottom "Wrong storage password.";
			close;
		}
		set @kafcode_try,0;
		set @code_,0;
	}
	mes "Close this window and I will open your storage.";
	close2;
	openstorage;
	end;

L_StorageJBlow:
	mes "[^004bedBlitzRO Warpra^000000]";
	mes "I am sorry but you have to be at least Novice level 6 if you want to use the storage.";
	return;

L_GStorage:
	if (!@GID) {
		next;
		mes "[^004bedBlitzRO Warpra^000000]";
		mes "You are not a part of a guild I can't help you.";
		close;
		end;
	}
	if (Zeny<$QW_GS_PRICE) callsub L_Short_on_zeny,3;
	set Zeny, Zeny-$QW_GS_PRICE;
	if ($QW_KPoint == 1) set RESRVPTS, RESRVPTS + ($QW_GS_PRICE/5);
	next;
	mes "[^004bedBlitzRO Warpra^000000]";
	mes "Close this window and I will open the ^5533FF" + GetGuildName(@GID) + "^000000 storage.";
	close2;
	guildopenstorage;
	end;
	
L_end:
	close;
	end;

//============================Few=Warp=============================
L_FewWarps:
	clear;
	mes "[^004bedBlitzRO Warpra^000000]";
	mes "You need to unlock locations before they come available to you.";
	mes "To unlock a location talk to my colleagues all over the world.";
	mes "Each account has its own stamp card.";
	mes "Want me to check what stamps you have collected so far?";
	if (select("Yes","No")==1) callsub stampcard;
	close;
	end;

//============================No=Unlock============================
L_NoUnlock:
	clear;
	mes "[^004bedBlitzRO Warpra^000000]";
	mes "I don't unlock this location, my assistant deeper in the dungeon will unlock this place.";
	close;
	end;
	
//=========================Short=On=Zeny===========================
L_Short_on_zeny:
	clear;
	mes "[^004bedBlitzRO Warpra^000000]";
	switch(getarg(0)) {
	case 0: mes "You don't seem to have "+@pTprice[@Tmenuref[@TWMenu-1]]+" zeny to pay for the warp to "+@pTmenuitems$[@Tmenuref[@TWMenu-1]]+"."; break;
	case 1: mes "You don't seem to have "+@warpprice+" zeny to pay for the warp to "+@DLevelName$[@DWLmenuref[@DWLMenu-1]]+" at "+@pDmenuitems$[@Dmenuref[@DWMenu-1]]+"."; break;
	case 2: mes "You don't seem to have "+@fee+" zeny to pay the storage fee."; break;
	case 3: mes "You don't seem to have "+$QW_GS_PRICE+" zeny to pay the guild storage fee."; break;
	case 4: mes "You don't seem to have "+@healfee+" zeny to pay for your healing."; break;
	case 5: mes "You don't seem to have 10,000 zeny to pay for your MVP room rental."; break;
	}
	close;
	end;
	
//===========================Stamp=Card============================
stampcard:
// Counting of the amount of places you have unlocked
	clear;
	mes "[^004bedBlitzRO Warpra^000000]";
	callfunc "QWS_TownStamps";
	mes "You collected^00FF00 "+@Tstamp+" of "+@MaxTstamp+" ^000000Towns.";
	if (@Tstamp == 15) {
		mes "They say there is an island you can only get to when married...";
		emotion ET_SMILE;
	}
	next;
	mes "[^004bedBlitzRO Warpra^000000]";
	callfunc "QWS_DungeonStamps";
	mes "You collected^00FF00 "+@Dstamp+" of "+@MaxDstamp+" ^000000Dungeons.";
	mes "To unlock a dungeon, search for my colleagues within the dungeon!";
	return;
}

function	script	QWS_TownStamps	{
	set @Tstamp,0;
	set @MaxTstamp,30; //maximum number of towns
	set @binvalue,1;
	set @Tstamploop,0;
	do {
		if ((@binvalue & ##QWS_T_Unlock) == @binvalue) set @Tstamp,@Tstamp+1;
		set @binvalue, @binvalue *2;
		set @Tstamploop, @Tstamploop + 1;
	} while (@Tstamploop < @MaxTstamp);
	return;
}

function	script	QWS_DungeonStamps	{
	set @Dstamp,0;
	set @MaxDstamp,33; //maximum number of dungeons
	set @binvalue,1;
	set @Dstamploop,0;
	do {
		if ((@binvalue & ##QWS_D_Unlock) == @binvalue) set @Dstamp,@Dstamp+1;
		set @binvalue, @binvalue *2;
		set @Dstamploop, @Dstamploop + 1;
	} while (@Dstamploop < @MaxDstamp);
	return;
}

//======================Main=Menu=Array============================

function	script	QWS_MMarray	{

	// Currently 10 items with last warp
	//if (lastwarp$ != "") {
		setarray @pMmenuitems$[0], "GameMaster Menu", "Re-warp [^e80051"+callfunc("F_Mapname",lastwarp$)+"^000000] -> ^c27e17"+callfunc("F_InsertComma",lastwarpz)+"^000000z", "Warp to Towns", "Warp to Dungeons", "Redeem Warpra Ticket", "Warp to MVP Room", "Why so few warps?", "Why don't you unlock this location?", "Heal", "Heal", "Storage", "Guild Storage", "Cancel";
	//} else {
	//  setarray @pMmenuitems$[0], "GameMaster Menu", "Warp to Towns", "Warp to Dungeons", "Redeem Warpra Ticket", "Warp to MVP Room", "Why so few warps?", "Why don't you unlock this location?", "Heal", "Heal", "Storage", "Guild Storage", "Cancel";
	//}
	// 
	set @Mi,0; // loop counter
	set @Mj,0; // menu line counter

//----------------GameMaster-Menu
	if (getgmlevel()>= 80) {
		set @Mmenulist$[@Mj],@pMmenuitems$[@Mi];
		set @Mmenuref[@Mj],@Mi;
		set @Mj,@Mj+1;
	}
	set @Mi,@Mi+1;
//----------------Special-Warp
	if ($QW_LASTW_OFF == 0 && lastwarp$ != "") {
		set @Mmenulist$[@Mj],@pMmenuitems$[@Mi];
		set @Mmenuref[@Mj],@Mi;
		set @Mj,@Mj+1;
	}
	set @Mi,@Mi+1;
//----------------Town-Warp
	if ($QW_TW_OFF == 0) {
		set @Mmenulist$[@Mj],@pMmenuitems$[@Mi];
		set @Mmenuref[@Mj],@Mi;
		set @Mj,@Mj+1;
	}
	set @Mi,@Mi+1;
//----------------Dungeon-Warp
	if ($QW_DW_OFF == 0) {
		set @Mmenulist$[@Mj],@pMmenuitems$[@Mi];
		set @Mmenuref[@Mj],@Mi;
		set @Mj,@Mj+1;
	}
	set @Mi,@Mi+1;
//----------------Ticket-Redeem
		set @Mmenulist$[@Mj],@pMmenuitems$[@Mi];
		set @Mmenuref[@Mj],@Mi;
		set @Mj,@Mj+1;
	set @Mi,@Mi+1;
//----------------MVP-Warp
	if ($QW_MVPW_OFF == 0) {
		set @Mmenulist$[@Mj],@pMmenuitems$[@Mi];
		set @Mmenuref[@Mj],@Mi;
		set @Mj,@Mj+1;
	}
	set @Mi,@Mi+1;
//----------------Why-So-Few-Warps
	set @Mmenulist$[@Mj],@pMmenuitems$[@Mi];
	set @Mmenuref[@Mj],@Mi;
	set @Mj,@Mj+1;
	set @Mi,@Mi+1;
//----------------No-Unlock
	if (getarg(0) == 1) {
		set @Mmenulist$[@Mj],@pMmenuitems$[@Mi];
		set @Mmenuref[@Mj],@Mi;
		set @Mj,@Mj+1;
	}
	set @Mi,@Mi+1;
//----------------Healfull
	if ($QW_HF == 1) {
		set @Mmenulist$[@Mj],@pMmenuitems$[@Mi];
		set @Mmenuref[@Mj],@Mi;
		set @Mj,@Mj+1;
	}
	set @Mi,@Mi+1;
//----------------Healpart
	if ($QW_HP == 1) {
		set @Mmenulist$[@Mj],@pMmenuitems$[@Mi];
		set @Mmenuref[@Mj],@Mi;
		set @Mj,@Mj+1;
	}
	set @Mi,@Mi+1;
//----------------Storage
	if ($QW_Stor == 1) {
		set @Mmenulist$[@Mj],@pMmenuitems$[@Mi];
		set @Mmenuref[@Mj],@Mi;
		set @Mj,@Mj+1;
	}
	set @Mi,@Mi+1;
//----------------GuildStorage
	if ($QW_GStor == 1) {
		set @Mmenulist$[@Mj],@pMmenuitems$[@Mi];
		set @Mmenuref[@Mj],@Mi;
		set @Mj,@Mj+1;
	}
	set @Mi,@Mi+1;
//----------------Cancel
	set @Mmenulist$[@Mj],@pMmenuitems$[@Mi];
	set @Mmenuref[@Mj],@Mi;
	return;
}

//======================Town=Menu=Array============================
// Adding a town:
//	setarray @pTmenuitems$[@Ti], "Prontera";// Name of Town shown in Town select Menu
//	setarray @pTprice[@Ti], $QW_BW_PRICE;	// Warp prices: Basic ($QW_BW_PRICE), Advanced ($QW_AW_PRICE), Overseas ($QW_OW_PRICE)
//
//	setarray @pTmap$[@Ti], "prontera";	// Map name
//	setarray @pTXcoords[@Ti], 156;		// X warp coords
//	setarray @pTYcoords[@Ti], 187;		// Y warp coords
//
//	QWS_Make_Town_Menu 0;	// Use a free number (last used is 30, Eclage)
//
// Adding a warpra:
//	map,x,y,facing	script	Warpra#example	113,{
//		callfunc "QWS_Town_Warpra",<town number>,"Your Town";
//		close;
//	}
//	Town number is the same as "QWS_Make_Town_Menu".
//==================================================================

function	script	QWS_Tarray	{
	function QWS_Make_Town_Menu;
	function QWS_Make_Town_Unlock;

	set @Ti,0; // loop counter
	set @Tj,0; // menu lines counter
	set @Tju,0;

//----------------Prontera
	setarray @pTmenuitems$[@Ti], "Prontera"; 
	setarray @pTmenuitemsUnl$[@Ti], "Prontera"; 
	setarray @pTprice[@Ti], $QW_BW_PRICE;

	setarray @pTmap$[@Ti], "prontera";
	setarray @pTXcoords[@Ti], 156;
	setarray @pTYcoords[@Ti], 187;
	setarray @pTUnlockRef[@Ti], 0;

	if(getarg(0) == 2){ QWS_Make_Town_Menu 0;}
	if(getarg(0) == 1){QWS_Make_Town_Unlock 0;}
//----------------Alberta
	setarray @pTmenuitems$[@Ti], "Alberta";
	setarray @pTmenuitemsUnl$[@Ti], "Alberta";
	setarray @pTprice[@Ti], $QW_BW_PRICE;

	setarray @pTmap$[@Ti], "alberta";
	setarray @pTXcoords[@Ti], 27;
	setarray @pTYcoords[@Ti], 236;
	setarray @pTUnlockRef[@Ti], 1;

	if(getarg(0) == 2){ QWS_Make_Town_Menu 1;}
	if(getarg(0) == 1){QWS_Make_Town_Unlock 1;}
//----------------Aldebaran
	setarray @pTmenuitems$[@Ti], "Aldebaran";
	setarray @pTmenuitemsUnl$[@Ti], "Aldebaran";
	setarray @pTprice[@Ti], $QW_AW_PRICE;

	setarray @pTmap$[@Ti], "aldebaran";
	setarray @pTXcoords[@Ti], 145;
	setarray @pTYcoords[@Ti], 120;
	setarray @pTUnlockRef[@Ti], 2;

	if(getarg(0) == 2){ QWS_Make_Town_Menu 2;}
	if(getarg(0) == 1){QWS_Make_Town_Unlock 2;}
//----------------Amatsu:
	setarray @pTmenuitems$[@Ti], "Amatsu";
	setarray @pTmenuitemsUnl$[@Ti], "Amatsu";
	setarray @pTprice[@Ti], $QW_OW_PRICE;

	setarray @pTmap$[@Ti], "amatsu";
	setarray @pTXcoords[@Ti], 197;
	setarray @pTYcoords[@Ti], 86;
	setarray @pTUnlockRef[@Ti], 3;

	if(getarg(0) == 2){ QWS_Make_Town_Menu 3;}
	if(getarg(0) == 1){QWS_Make_Town_Unlock 3;}
//----------------Ayothaya:
	setarray @pTmenuitems$[@Ti], "Ayothaya";
	setarray @pTmenuitemsUnl$[@Ti], "Ayothaya";
	setarray @pTprice[@Ti], $QW_OW_PRICE;

	setarray @pTmap$[@Ti], "ayothaya";
	setarray @pTXcoords[@Ti], 150;
	setarray @pTYcoords[@Ti], 57;
	setarray @pTUnlockRef[@Ti], 4;

	if(getarg(0) == 2){ QWS_Make_Town_Menu 4;}
	if(getarg(0) == 1){QWS_Make_Town_Unlock 4;}
//----------------Brasilis:
	setarray @pTmenuitems$[@Ti], "Brasilis";
	setarray @pTmenuitemsUnl$[@Ti], "Brasilis";
	setarray @pTprice[@Ti], $QW_OW_PRICE;

	setarray @pTmap$[@Ti], "brasilis";
	setarray @pTXcoords[@Ti], 195;
	setarray @pTYcoords[@Ti], 220;
	setarray @pTUnlockRef[@Ti], 5;

	if(getarg(0) == 2){ QWS_Make_Town_Menu 5;}
	if(getarg(0) == 1){QWS_Make_Town_Unlock 5;}
//----------------Comodo:
	setarray @pTmenuitems$[@Ti], "Comodo";
	setarray @pTmenuitemsUnl$[@Ti], "Comodo";
	setarray @pTprice[@Ti], $QW_AW_PRICE;

	setarray @pTmap$[@Ti], "comodo";
	setarray @pTXcoords[@Ti], 188;
	setarray @pTYcoords[@Ti], 161;
	setarray @pTUnlockRef[@Ti], 6;

	if(getarg(0) == 2){ QWS_Make_Town_Menu 6;}
	if(getarg(0) == 1){QWS_Make_Town_Unlock 6;}
//----------------Dewata:
	setarray @pTmenuitems$[@Ti], "Dewata";
	setarray @pTmenuitemsUnl$[@Ti], "Dewata";
	setarray @pTprice[@Ti], $QW_OW_PRICE;

	setarray @pTmap$[@Ti], "dewata";
	setarray @pTXcoords[@Ti], 199;
	setarray @pTYcoords[@Ti], 179;
	setarray @pTUnlockRef[@Ti], 7;

	if(getarg(0) == 2){ QWS_Make_Town_Menu 7;}
	if(getarg(0) == 1){QWS_Make_Town_Unlock 7;}
//----------------Dorado:
	setarray @pTmenuitems$[@Ti], "Dorado";
	setarray @pTmenuitemsUnl$[@Ti], "Dorado";
	setarray @pTprice[@Ti], $QW_OW_PRICE;

	setarray @pTmap$[@Ti], "dorado";
	setarray @pTXcoords[@Ti], 198;
	setarray @pTYcoords[@Ti], 143;
	setarray @pTUnlockRef[@Ti], 31;

	if(getarg(0) == 2){ QWS_Make_Town_Menu 31;}
	if(getarg(0) == 1){QWS_Make_Town_Unlock 31;}
//----------------Eclage:

	setarray @pTmenuitems$[@Ti], "Eclage";
	setarray @pTmenuitemsUnl$[@Ti], "Eclage";
	setarray @pTprice[@Ti], $QW_OW_PRICE;

	setarray @pTmap$[@Ti], "eclage";
	setarray @pTXcoords[@Ti], 111;
	setarray @pTYcoords[@Ti], 39;
	setarray @pTUnlockRef[@Ti], 8;

	if(getarg(0) == 2){ QWS_Make_Town_Menu 8;}
	if(getarg(0) == 1){QWS_Make_Town_Unlock 8;}
//----------------Einbech:
	setarray @pTmenuitems$[@Ti], "Einbech";
	setarray @pTmenuitemsUnl$[@Ti], "Einbech";
	setarray @pTprice[@Ti], $QW_AW_PRICE;

	setarray @pTmap$[@Ti], "einbech";
	setarray @pTXcoords[@Ti], 172;
	setarray @pTYcoords[@Ti], 126;
	setarray @pTUnlockRef[@Ti], 9;

	if(getarg(0) == 2){ QWS_Make_Town_Menu 9;}
	if(getarg(0) == 1){QWS_Make_Town_Unlock 9;}
//----------------Einbroch:
	setarray @pTmenuitems$[@Ti], "Einbroch";
	setarray @pTmenuitemsUnl$[@Ti], "Einbroch";
	setarray @pTprice[@Ti], $QW_AW_PRICE;

	setarray @pTmap$[@Ti], "einbroch";
	setarray @pTXcoords[@Ti], 230;
	setarray @pTYcoords[@Ti], 191;
	setarray @pTUnlockRef[@Ti], 10;

	if(getarg(0) == 2){ QWS_Make_Town_Menu 10;}
	if(getarg(0) == 1){QWS_Make_Town_Unlock 10;}
//----------------El Dicastes:
	setarray @pTmenuitems$[@Ti], "El Dicastes";
	setarray @pTmenuitemsUnl$[@Ti], "El Dicastes";
	setarray @pTprice[@Ti], $QW_OW_PRICE;

	setarray @pTmap$[@Ti], "dicastes01";
	setarray @pTXcoords[@Ti], 197;
	setarray @pTYcoords[@Ti], 187;
	setarray @pTUnlockRef[@Ti], 11;

	if(getarg(0) == 2){ QWS_Make_Town_Menu 11;}
	if(getarg(0) == 1){QWS_Make_Town_Unlock 11;}
//----------------Geffen:
	setarray @pTmenuitems$[@Ti], "Geffen";
	setarray @pTmenuitemsUnl$[@Ti], "Geffen";
	setarray @pTprice[@Ti], $QW_BW_PRICE;

	setarray @pTmap$[@Ti], "geffen";
	setarray @pTXcoords[@Ti], 119;
	setarray @pTYcoords[@Ti], 66;
	setarray @pTUnlockRef[@Ti], 12;

	if(getarg(0) == 2){ QWS_Make_Town_Menu 12;}
	if(getarg(0) == 1){QWS_Make_Town_Unlock 12;}
//----------------Kunlun:
	setarray @pTmenuitems$[@Ti], "Kunlun";
	setarray @pTmenuitemsUnl$[@Ti], "Kunlun";
	setarray @pTprice[@Ti], $QW_OW_PRICE;

	setarray @pTmap$[@Ti], "gonryun";
	setarray @pTXcoords[@Ti], 150;
	setarray @pTYcoords[@Ti], 130;
	setarray @pTUnlockRef[@Ti], 13;

	if(getarg(0) == 2){ QWS_Make_Town_Menu 13;}
	if(getarg(0) == 1){QWS_Make_Town_Unlock 13;}
//----------------Hugel:
	setarray @pTmenuitems$[@Ti], "Hugel";
	setarray @pTmenuitemsUnl$[@Ti], "Hugel";
	setarray @pTprice[@Ti], $QW_AW_PRICE;

	setarray @pTmap$[@Ti], "hugel";
	setarray @pTXcoords[@Ti], 95;
	setarray @pTYcoords[@Ti], 121;
	setarray @pTUnlockRef[@Ti], 14;

	if(getarg(0) == 2){ QWS_Make_Town_Menu 14;}
	if(getarg(0) == 1){QWS_Make_Town_Unlock 14;}
//----------------Izlude:
	setarray @pTmenuitems$[@Ti], "Izlude";
	setarray @pTmenuitemsUnl$[@Ti], "Izlude";
	setarray @pTprice[@Ti], $QW_BW_PRICE;

	setarray @pTmap$[@Ti], "izlude";
	setarray @pTXcoords[@Ti], 128;
	setarray @pTYcoords[@Ti], 111;
	setarray @pTUnlockRef[@Ti], 15;

	if(getarg(0) == 2){ QWS_Make_Town_Menu 15;}
	if(getarg(0) == 1){QWS_Make_Town_Unlock 15;}
//----------------Jawaii:
	setarray @pTmenuitems$[@Ti], "Jawaii";
	setarray @pTmenuitemsUnl$[@Ti], "Jawaii";
	setarray @pTprice[@Ti], $QW_AW_PRICE;

	setarray @pTmap$[@Ti], "jawaii";
	setarray @pTXcoords[@Ti], 243;
	setarray @pTYcoords[@Ti], 115;
	setarray @pTUnlockRef[@Ti], 16;

	if(getarg(0) == 2){ QWS_Make_Town_Menu 16;}
	if(getarg(0) == 1){QWS_Make_Town_Unlock 16;}
//----------------Lighthalzen:
	setarray @pTmenuitems$[@Ti], "Lighthalzen";
	setarray @pTmenuitemsUnl$[@Ti], "Lighthalzen";
	setarray @pTprice[@Ti], $QW_AW_PRICE;

	setarray @pTmap$[@Ti], "lighthalzen";
	setarray @pTXcoords[@Ti], 158;
	setarray @pTYcoords[@Ti], 110;
	setarray @pTUnlockRef[@Ti], 17;

	if(getarg(0) == 2){ QWS_Make_Town_Menu 17;}
	if(getarg(0) == 1){QWS_Make_Town_Unlock 17;}
//----------------Luoyang:
	setarray @pTmenuitems$[@Ti], "Louyang";
	setarray @pTmenuitemsUnl$[@Ti], "Louyang";
	setarray @pTprice[@Ti], $QW_OW_PRICE;

	setarray @pTmap$[@Ti], "louyang";
	setarray @pTXcoords[@Ti], 210;
	setarray @pTYcoords[@Ti], 108;
	setarray @pTUnlockRef[@Ti], 18;

	if(getarg(0) == 2){ QWS_Make_Town_Menu 18;}
	if(getarg(0) == 1){QWS_Make_Town_Unlock 18;}
//----------------Lutie
	setarray @pTmenuitems$[@Ti], "Lutie";
	setarray @pTmenuitemsUnl$[@Ti], "Lutie";
	setarray @pTprice[@Ti], $QW_AW_PRICE;

	setarray @pTmap$[@Ti], "xmas";
	setarray @pTXcoords[@Ti], 148;
	setarray @pTYcoords[@Ti], 131;
	setarray @pTUnlockRef[@Ti], 19;

	if(getarg(0) == 2){ QWS_Make_Town_Menu 19;}
	if(getarg(0) == 1){QWS_Make_Town_Unlock 19;}
//----------------Manuk
	setarray @pTmenuitems$[@Ti], "Manuk";
	setarray @pTmenuitemsUnl$[@Ti], "Manuk";
	setarray @pTprice[@Ti], $QW_OW_PRICE;

	setarray @pTmap$[@Ti], "manuk";
	setarray @pTXcoords[@Ti], 260;
	setarray @pTYcoords[@Ti], 175;
	setarray @pTUnlockRef[@Ti], 20;

	if(getarg(0) == 2){ QWS_Make_Town_Menu 20;}
	if(getarg(0) == 1){QWS_Make_Town_Unlock 20;}
//----------------Mora
	setarray @pTmenuitems$[@Ti], "Mora";
	setarray @pTmenuitemsUnl$[@Ti], "Mora";
	setarray @pTprice[@Ti], $QW_OW_PRICE;

	setarray @pTmap$[@Ti], "mora";
	setarray @pTXcoords[@Ti], 111;
	setarray @pTYcoords[@Ti], 97;
	setarray @pTUnlockRef[@Ti], 21;

	if(getarg(0) == 2){ QWS_Make_Town_Menu 21;}
	if(getarg(0) == 1){QWS_Make_Town_Unlock 21;}
//----------------Morocc:
	setarray @pTmenuitems$[@Ti], "Morocc";
	setarray @pTmenuitemsUnl$[@Ti], "Morocc";
	setarray @pTprice[@Ti], $QW_BW_PRICE;

	setarray @pTmap$[@Ti], "morocc";
	setarray @pTXcoords[@Ti], 159;
	setarray @pTYcoords[@Ti], 93;
	setarray @pTUnlockRef[@Ti], 22;

	if(getarg(0) == 2){ QWS_Make_Town_Menu 22;}
	if(getarg(0) == 1){QWS_Make_Town_Unlock 22;}
//----------------Moscovia
	setarray @pTmenuitems$[@Ti], "Moscovia";
	setarray @pTmenuitemsUnl$[@Ti], "Moscovia";
	setarray @pTprice[@Ti], $QW_OW_PRICE;

	setarray @pTmap$[@Ti], "moscovia";
	setarray @pTXcoords[@Ti], 219;
	setarray @pTYcoords[@Ti], 193;
	setarray @pTUnlockRef[@Ti], 23;

	if(getarg(0) == 2){ QWS_Make_Town_Menu 23;}
	if(getarg(0) == 1){QWS_Make_Town_Unlock 23;}
//----------------Niflheim:
	setarray @pTmenuitems$[@Ti], "Niflheim";
	setarray @pTmenuitemsUnl$[@Ti], "Niflheim";
	setarray @pTprice[@Ti], $QW_AW_PRICE;

	setarray @pTmap$[@Ti], "niflheim";
	setarray @pTXcoords[@Ti], 195;
	setarray @pTYcoords[@Ti], 186;
	setarray @pTUnlockRef[@Ti], 24;

	if(getarg(0) == 2){ QWS_Make_Town_Menu 24;}
	if(getarg(0) == 1){QWS_Make_Town_Unlock 24;}
//----------------Payon:
	setarray @pTmenuitems$[@Ti], "Payon";
	setarray @pTmenuitemsUnl$[@Ti], "Payon";
	setarray @pTprice[@Ti], $QW_BW_PRICE;

	setarray @pTmap$[@Ti], "payon";
	setarray @pTXcoords[@Ti], 152;
	setarray @pTYcoords[@Ti], 75;
	setarray @pTUnlockRef[@Ti], 25;

	if(getarg(0) == 2){ QWS_Make_Town_Menu 25;}
	if(getarg(0) == 1){QWS_Make_Town_Unlock 25;}
//----------------Rachel
	setarray @pTmenuitems$[@Ti], "Rachel";
	setarray @pTmenuitemsUnl$[@Ti], "Rachel";
	setarray @pTprice[@Ti], $QW_AW_PRICE;

	setarray @pTmap$[@Ti], "rachel";
	setarray @pTXcoords[@Ti], 130;
	setarray @pTYcoords[@Ti], 111;
	setarray @pTUnlockRef[@Ti], 26;

	if(getarg(0) == 2){ QWS_Make_Town_Menu 26;}
	if(getarg(0) == 1){QWS_Make_Town_Unlock 26;}
//----------------Splendide
	setarray @pTmenuitems$[@Ti], "Splendide";
	setarray @pTmenuitemsUnl$[@Ti], "Splendide";
	setarray @pTprice[@Ti], $QW_OW_PRICE;

	setarray @pTmap$[@Ti], "splendide";
	setarray @pTXcoords[@Ti], 200;
	setarray @pTYcoords[@Ti], 153;
	setarray @pTUnlockRef[@Ti], 27;

	if(getarg(0) == 2){ QWS_Make_Town_Menu 27;}
	if(getarg(0) == 1){QWS_Make_Town_Unlock 27;}
//----------------Umbala:
	setarray @pTmenuitems$[@Ti], "Umbala";
	setarray @pTmenuitemsUnl$[@Ti], "Umbala";
	setarray @pTprice[@Ti], $QW_AW_PRICE;

	setarray @pTmap$[@Ti], "umbala";
	setarray @pTXcoords[@Ti], 130;
	setarray @pTYcoords[@Ti], 130;
	setarray @pTUnlockRef[@Ti], 28;

	if(getarg(0) == 2){ QWS_Make_Town_Menu 28;}
	if(getarg(0) == 1){QWS_Make_Town_Unlock 28;}
//----------------Veins
	setarray @pTmenuitems$[@Ti], "Veins";
	setarray @pTmenuitemsUnl$[@Ti], "Veins";
	setarray @pTprice[@Ti], $QW_OW_PRICE;

	setarray @pTmap$[@Ti], "veins";
	setarray @pTXcoords[@Ti], 216;
	setarray @pTYcoords[@Ti], 123;
	setarray @pTUnlockRef[@Ti], 29;

	if(getarg(0) == 2){ QWS_Make_Town_Menu 29;}
	if(getarg(0) == 1){QWS_Make_Town_Unlock 29;}
//----------------Juno:
	setarray @pTmenuitems$[@Ti], "Yuno";
	setarray @pTmenuitemsUnl$[@Ti], "Yuno";
	setarray @pTprice[@Ti], $QW_AW_PRICE;

	setarray @pTmap$[@Ti], "yuno";
	setarray @pTXcoords[@Ti], 160;
	setarray @pTYcoords[@Ti], 168;
	setarray @pTUnlockRef[@Ti], 30;

	if(getarg(0) == 2){ QWS_Make_Town_Menu 30;}
	if(getarg(0) == 1){ QWS_Make_Town_Unlock 30;}
//----------------Cancel
	setarray @pTmenuitems$[@Ti], "[^FF0000Cancel^000000]";
	setarray @pTmenuitemsUnl$[@Ti], "[^FF0000Cancel^000000]";
	setarray @pTprice[@Ti], 0;

	set @Tmenulist$[@Tj],@pTmenuitems$[@Ti];
	set @TmenulistUnl$[@Tju],@pTmenuitemsUnl$[@Ti];
	set @Tmenuref[@Tj],57005; // 57005='dead' in hex
	set @TmenurefUnl[@Tju],57005; // 57005='dead' in hex
	return;


//----------------Make Town Menu Function

function	QWS_Make_Town_Menu	{
	set @temptownmenubin,1;
	if (getarg(0) == 0) goto menu_item;
	set @templooptownmenu,0;
	do {
		set @temptownmenubin, @temptownmenubin * 2;
		set @templooptownmenu, @templooptownmenu + 1;
		}while (getarg(0) > @templooptownmenu);
// check marker and make menu item
menu_item:
	if ((@temptownmenubin & ##QWS_T_Unlock) != @temptownmenubin) {
		set @Ti,@Ti+1;
		return;
	}
	if (@pTprice[@Ti] != 0)&&($QW_MapUserShow == 0) set @Tmenulist$[@Tj], @pTmenuitems$[@Ti]+" -> ^c27e17"+callfunc("F_InsertComma",@pTprice[@Ti])+"^000000z";
	if (@pTprice[@Ti] == 0)&&($QW_MapUserShow == 0) set @Tmenulist$[@Tj], @pTmenuitems$[@Ti];
	if (@pTprice[@Ti] != 0)&&($QW_MapUserShow == 1) set @Tmenulist$[@Tj], @pTmenuitems$[@Ti]+" [^6db002"+getmapusers(@pTmap$[@Ti])+"^000000]"+" -> ^c27e17"+callfunc("F_InsertComma",@pTprice[@Ti])+"^000000z";
	if (@pTprice[@Ti] == 0)&&($QW_MapUserShow == 1) set @Tmenulist$[@Tj], @pTmenuitems$[@Ti]+" [^6db002"+getmapusers(@pTmap$[@Ti])+"^000000]";
	set @Tmenuref[@Tj],@Ti;
	set @Tj,@Tj+1;
	set @Ti,@Ti+1;
	return;
}


function	QWS_Make_Town_Unlock	{
	set @temptownmenubin,1;
	if (getarg(0) == 0) goto menu_item_unl;
	set @templooptownmenu,0;
	do {
		set @temptownmenubin, @temptownmenubin * 2;
		set @templooptownmenu, @templooptownmenu + 1;
		}while (getarg(0) > @templooptownmenu);
// check marker and make menu item
menu_item_unl:
	if ((@temptownmenubin & ##QWS_T_Unlock) == @temptownmenubin) {
		set @Ti,@Ti+1;
		return;
	}

	set @TmenulistUnl$[@Tju], @pTmenuitemsUnl$[@Ti];
	set @TmenurefUnl[@Tju],@pTUnlockRef[@Ti];
	set @Tju,@Tju+1;
	set @Ti,@Ti+1;
	return;
}
}

//====================Dungeon=Menu=Arrays==========================
// Adding a dungeon:
//	setarray @pDmenuitems$[@Di], "Abyss Lake";	// Name of Dungeon shown in Dungeon select Menu
//	setarray @pDprice[@Di], $QW_AW_PRICE;		// Warp prices: Basic ($QW_BW_PRICE), Advanced ($QW_AW_PRICE), Overseas ($QW_OW_PRICE)
//	setarray @pDfee$[@Di], "$QW_AW_FEE";		// Identifier for fee caluclation: Basic ("$QW_BW_FEE"), Advanced ("$QW_AW_FEE"), Overseas ("$QW_OW_FEE")
//	setarray @DLevels[@Di], 3;			// Number of levels in dungeon
//
//	setarray @DGat$[@Dref], "abyss_01", "abyss_02", "abyss_03";	// Map names of dungeon levels
//	setarray @DLevelName$[@Dref], "Level 1", "Level 2", "Level 3";	// Name of dungeon levels shown in Menu
//	setarray @DXcoords[@Dref], 265, 275, 116;			// X warp coords
//	setarray @DYcoords[@Dref], 273, 270, 27;			// Y warp coords
//	setarray @DDepth[@Dref], 0, 1, 2;				// Relative depth to entrance, to calculate extra warp fee
//
//	QWS_Make_Dungeon_Menu 0;	// Use a free number (last used is 28, Kiel Dungeon)
//
// Adding a warpra:
//	map,x,y,facing	script	Warpra Helper#example	112,{
//		callfunc "QWS_Dungeon_Warpra",<dungeon number>,"Your Dungeon";
//		close;
//	}
//	Dungeon number is the same as "QWS_Make_Dungeon_Menu".
//==================================================================

function	script	QWS_Darray	{
	function QWS_Make_Dungeon_Menu;
	function QWS_Make_Dungeon_Unlock;

	set @Di,0;
	set @Dj,0;
	set @Dju,0;
	set @Dref,0;

//----------------ABYSS LAKE
	setarray @pDmenuitems$[@Di], "Abyss Lake";
	setarray @pDmenuitemsUnl$[@Di], "Abyss Lake";
	setarray @pDprice[@Di], $QW_AW_PRICE;
	setarray @pDfee$[@Di], "$QW_AW_FEE";
	setarray @DLevels[@Di], 3;
	setarray @pDUnlockRef[@Di],0;

	setarray @DGat$[@Dref], "abyss_01", "abyss_02", "abyss_03";
	setarray @DLevelName$[@Dref], "Level 1", "Level 2", "Level 3";
	setarray @DXcoords[@Dref], 265, 275, 116;
	setarray @DYcoords[@Dref], 271, 270, 27;
	setarray @DDepth[@Dref], 0, 1, 2;

	if(getarg(0) == 2){ QWS_Make_Dungeon_Menu 0;}
	if(getarg(0) == 1){ QWS_Make_Dungeon_Unlock 0;}


//----------------AMATSU DUNGEON
	setarray @pDmenuitems$[@Di], "Amatsu Dungeon";
	setarray @pDmenuitemsUnl$[@Di], "Amatsu Dungeon";
	setarray @pDprice[@Di], $QW_OW_PRICE;
	setarray @pDfee$[@Di], "$QW_OW_FEE";
	setarray @DLevels[@Di], 3;
	setarray @pDUnlockRef[@Di],1;

	setarray @DGat$[@Dref], "ama_dun01", "ama_dun02", "ama_dun03";
	setarray @DLevelName$[@Dref], "Level 1", "Level 2", "Level 3";
	setarray @DXcoords[@Dref], 227, 32, 119;
	setarray @DYcoords[@Dref], 10, 43, 15;
	setarray @DDepth[@Dref], 0, 1, 2;

	if(getarg(0) == 2){ QWS_Make_Dungeon_Menu 1;}
	if(getarg(0) == 1){ QWS_Make_Dungeon_Unlock 1;}

//----------------ANT HELL
	setarray @pDmenuitems$[@Di], "Ant Hell Dungeon"; 
	setarray @pDmenuitemsUnl$[@Di], "Ant Hell Dungeon"; 
	setarray @pDprice[@Di], $QW_BW_PRICE;
	setarray @pDfee$[@Di], "$QW_BW_FEE";
	setarray @DLevels[@Di], 2;
	setarray @pDUnlockRef[@Di],2;

	setarray @DGat$[@Dref], "anthell01", "anthell02";
	setarray @DLevelName$[@Dref], "Level 1", "Level 2";
	setarray @DXcoords[@Dref], 32, 34;
	setarray @DYcoords[@Dref], 262, 263;
	setarray @DDepth[@Dref], 0, 1;

	if(getarg(0) == 2){ QWS_Make_Dungeon_Menu 2;}
	if(getarg(0) == 1){ QWS_Make_Dungeon_Unlock 2;}

//----------------AYOTHAYA
	setarray @pDmenuitems$[@Di], "Ayothaya Dungeon";
	setarray @pDmenuitemsUnl$[@Di], "Ayothaya Dungeon";
	setarray @pDprice[@Di], $QW_OW_PRICE;
	setarray @pDfee$[@Di], "$QW_OW_FEE";
	setarray @DLevels[@Di], 2;
	setarray @pDUnlockRef[@Di],3;

	setarray @DGat$[@Dref], "ayo_dun01", "ayo_dun02";
	setarray @DLevelName$[@Dref], "Level 1", "Level 2";
	setarray @DXcoords[@Dref], 275, 150;
	setarray @DYcoords[@Dref], 17, 13;
	setarray @DDepth[@Dref], 0, 1;

	if(getarg(0) == 2){ QWS_Make_Dungeon_Menu 3;}
	if(getarg(0) == 1){ QWS_Make_Dungeon_Unlock 3;}
	
//----------------BIFROST TOWER
	setarray @pDmenuitems$[@Di], "Bifrost Tower";
	setarray @pDmenuitemsUnl$[@Di], "Bifrost Tower";
	setarray @pDprice[@Di], $QW_OW_PRICE;
	setarray @pDfee$[@Di], "$QW_OW_FEE";
	setarray @DLevels[@Di], 3;
	setarray @pDUnlockRef[@Di],4;

	setarray @DGat$[@Dref], "ecl_tdun01", "ecl_tdun02", "ecl_tdun03";
	setarray @DLevelName$[@Dref], "Level 1", "Level 2", "Level 3";
	setarray @DXcoords[@Dref], 61, 60, 49;
	setarray @DYcoords[@Dref], 18, 84, 16;
	setarray @DDepth[@Dref], 0, 1, 2;

	if(getarg(0) == 2){ QWS_Make_Dungeon_Menu 4;}
	if(getarg(0) == 1){ QWS_Make_Dungeon_Unlock 4;}
	
//----------------BRASILIS DUNGEON
	setarray @pDmenuitems$[@Di], "Brasilis Dungeon";
	setarray @pDmenuitemsUnl$[@Di], "Brasilis Dungeon";
	setarray @pDprice[@Di], $QW_OW_PRICE;
	setarray @pDfee$[@Di], "$QW_OW_FEE";
	setarray @DLevels[@Di], 2;
	setarray @pDUnlockRef[@Di],5;

	setarray @DGat$[@Dref], "bra_dun01", "bra_dun02";
	setarray @DLevelName$[@Dref], "Level 1", "Level 2";
	setarray @DXcoords[@Dref], 87, 261;
	setarray @DYcoords[@Dref], 47, 260;
	setarray @DDepth[@Dref], 0, 1;

	if(getarg(0) == 2){ QWS_Make_Dungeon_Menu 5;}
	if(getarg(0) == 1){ QWS_Make_Dungeon_Unlock 5;}
//----------------BYALAN
	setarray @pDmenuitems$[@Di], "Byalan Dungeon";
	setarray @pDmenuitemsUnl$[@Di], "Byalan Dungeon";
	setarray @pDprice[@Di], $QW_BW_PRICE;
	setarray @pDfee$[@Di], "$QW_BW_FEE";
	setarray @DLevels[@Di], 5;
	setarray @pDUnlockRef[@Di],6;

	setarray @DGat$[@Dref], "iz_dun00", "iz_dun01", "iz_dun02", "iz_dun03", "iz_dun04";
	setarray @DLevelName$[@Dref], "Level 1", "Level 2", "Level 3", "Level 4", "Level 5";
	setarray @DXcoords[@Dref], 168, 41, 236, 32, 26;
	setarray @DYcoords[@Dref], 168, 37, 204, 63, 27;
	setarray @DDepth[@Dref], 0, 1, 2, 3, 4;

	if(getarg(0) == 2){ QWS_Make_Dungeon_Menu 6;}
	if(getarg(0) == 1){ QWS_Make_Dungeon_Unlock 6;}

//----------------CLOCK TOWER
	setarray @pDmenuitems$[@Di], "Clock Tower Dungeon";
	setarray @pDmenuitemsUnl$[@Di], "Clock Tower Dungeon";
	setarray @pDprice[@Di], $QW_AW_PRICE;
	setarray @pDfee$[@Di], "$QW_AW_FEE";
	setarray @DLevels[@Di], 8;
	setarray @pDUnlockRef[@Di],7;

	setarray @DGat$[@Dref], "c_tower1", "c_tower2", "c_tower3", "c_tower4", "alde_dun01", "alde_dun02", "alde_dun03", "alde_dun04";
	setarray @DLevelName$[@Dref], "Clock Tower Level 1", "Clock Tower Level 2", "Clock Tower Level 3", "Clock Tower Level 4", "Basement 1F", "Basement 2F", "Basement 3F", "Basement 4F";
	setarray @DXcoords[@Dref], 200, 268, 64, 32, 197, 262, 276, 122;
	setarray @DYcoords[@Dref], 163, 26, 148, 63, 25, 41, 53, 125;
	setarray @DDepth[@Dref], 0, 1, 2, 3, 1, 2, 3, 4;

	if(getarg(0) == 2){ QWS_Make_Dungeon_Menu 7;}
	if(getarg(0) == 1){ QWS_Make_Dungeon_Unlock 7;}

//----------------COAL MINE
	setarray @pDmenuitems$[@Di], "Coal Mine Dungeon";
	setarray @pDmenuitemsUnl$[@Di], "Coal Mine Dungeon";
	setarray @pDprice[@Di], $QW_AW_PRICE;
	setarray @pDfee$[@Di], "$QW_AW_FEE";
	setarray @DLevels[@Di], 3;
	setarray @pDUnlockRef[@Di],8;

	setarray @DGat$[@Dref], "mjo_dun01", "mjo_dun02", "mjo_dun03";
	setarray @DLevelName$[@Dref], "Level 1", "Level 2", "Level 3";
	setarray @DXcoords[@Dref], 52, 381, 302;
	setarray @DYcoords[@Dref], 17, 343, 261;
	setarray @DDepth[@Dref], 0, 1, 2;

	if(getarg(0) == 2){ QWS_Make_Dungeon_Menu 8;}
	if(getarg(0) == 1){ QWS_Make_Dungeon_Unlock 8;}

//----------------CULVERT
	setarray @pDmenuitems$[@Di], "Culvert Dungeon";
	setarray @pDmenuitemsUnl$[@Di], "Culvert Dungeon";
	setarray @pDprice[@Di], $QW_BW_PRICE;
	setarray @pDfee$[@Di], "$QW_BW_FEE";
	setarray @DLevels[@Di], 4;
	setarray @pDUnlockRef[@Di],9;

	setarray @DGat$[@Dref], "prt_sewb1", "prt_sewb2", "prt_sewb3", "prt_sewb4";
	setarray @DLevelName$[@Dref], "Level 1", "Level 2", "Level 3", "Level 4";
	setarray @DXcoords[@Dref], 132, 19, 180, 100;
	setarray @DYcoords[@Dref], 248, 19, 169, 92;
	setarray @DDepth[@Dref], 0, 1, 2, 3;

	if(getarg(0) == 2){ QWS_Make_Dungeon_Menu 9;}
	if(getarg(0) == 1){ QWS_Make_Dungeon_Unlock 9;}
	
//----------------NAMESLESS ISLAND / CURSED MONESTARY
	setarray @pDmenuitems$[@Di], "Cursed Monestary";
	setarray @pDmenuitemsUnl$[@Di], "Cursed Monestary";
	setarray @pDprice[@Di], $QW_AW_PRICE;
	setarray @pDfee$[@Di], "$QW_AW_FEE";
	setarray @DLevels[@Di], 4;
	setarray @pDUnlockRef[@Di],10;

	setarray @DGat$[@Dref], "nameless_n", "abbey01", "abbey02", "abbey03";
	setarray @DLevelName$[@Dref], "Nameless Island", "Area 1", "Area 2", "Area 3";
	setarray @DXcoords[@Dref], 257, 51, 149, 119;
	setarray @DYcoords[@Dref], 216, 14, 12, 9;
	setarray @DDepth[@Dref], 0, 0, 1, 2;

	if(getarg(0) == 2){ QWS_Make_Dungeon_Menu 10;}
	if(getarg(0) == 1){ QWS_Make_Dungeon_Unlock 10;}

//----------------DEWATA DUNGEON
	setarray @pDmenuitems$[@Di], "Dewata Dungeon";
	setarray @pDmenuitemsUnl$[@Di], "Dewata Dungeon";
	setarray @pDprice[@Di], $QW_OW_PRICE;
	setarray @pDfee$[@Di], "$QW_OW_FEE";
	setarray @DLevels[@Di], 1;
	setarray @pDUnlockRef[@Di],11;

	setarray @DGat$[@Dref], "dew_dun02";
	setarray @DLevelName$[@Dref], "Level 1";
	setarray @DXcoords[@Dref], 302;
	setarray @DYcoords[@Dref], 30;
	setarray @DDepth[@Dref], 0;

	if(getarg(0) == 2){ QWS_Make_Dungeon_Menu 11;}
	if(getarg(0) == 1){ QWS_Make_Dungeon_Unlock 11;}

//----------------EINBECH DUNGEON
	setarray @pDmenuitems$[@Di], "Einbech Dungeon";
	setarray @pDmenuitemsUnl$[@Di], "Einbech Dungeon";
	setarray @pDprice[@Di], $QW_AW_PRICE;
	setarray @pDfee$[@Di], "$QW_AW_FEE";
	setarray @DLevels[@Di], 2;
	setarray @pDUnlockRef[@Di],12;

	setarray @DGat$[@Dref], "ein_dun01", "ein_dun02";
	setarray @DLevelName$[@Dref], "Level 1", "Level 2";
	setarray @DXcoords[@Dref], 22, 292;
	setarray @DYcoords[@Dref], 14, 290;
	setarray @DDepth[@Dref], 0, 1;

	if(getarg(0) == 2){ QWS_Make_Dungeon_Menu 12;}
	if(getarg(0) == 1){ QWS_Make_Dungeon_Unlock 12;}

//----------------GEFENIA DUNGEON
	setarray @pDmenuitems$[@Di], "Gefenia Dungeon";
	setarray @pDmenuitemsUnl$[@Di], "Gefenia Dungeon";
	setarray @pDprice[@Di], $QW_BW_PRICE;
	setarray @pDfee$[@Di], "$QW_BW_FEE";
	setarray @DLevels[@Di], 4;
	setarray @pDUnlockRef[@Di],13;

	setarray @DGat$[@Dref], "gefenia01", "gefenia02", "gefenia03", "gefenia04";
	setarray @DLevelName$[@Dref], "Level 1", "Level 2", "Level 3", "Level 4";
	setarray @DXcoords[@Dref], 59, 201, 264, 33;
	setarray @DYcoords[@Dref], 167, 35, 236, 270;
	setarray @DDepth[@Dref], 0, 1, 2, 3;

	if(getarg(0) == 2){ QWS_Make_Dungeon_Menu 13;}
	if(getarg(0) == 1){ QWS_Make_Dungeon_Unlock 13;}

//----------------GEFFEN DUNGEON
	setarray @pDmenuitems$[@Di], "Geffen Dungeon";
	setarray @pDmenuitemsUnl$[@Di], "Geffen Dungeon";
	setarray @pDprice[@Di], $QW_BW_PRICE;
	setarray @pDfee$[@Di], "$QW_BW_FEE";
	setarray @DLevels[@Di], 4;
	setarray @pDUnlockRef[@Di],14;

	setarray @DGat$[@Dref], "gef_dun00", "gef_dun01", "gef_dun02", "gef_dun03";
	setarray @DLevelName$[@Dref], "Level 1", "Level 2", "Level 3", "Level 4";
	setarray @DXcoords[@Dref], 104, 115, 106, 203;
	setarray @DYcoords[@Dref], 99, 236, 132, 200;
	setarray @DDepth[@Dref], 0, 1, 2, 3;

	if(getarg(0) == 2){ QWS_Make_Dungeon_Menu 14;}
	if(getarg(0) == 1){ QWS_Make_Dungeon_Unlock 14;}

//----------------GLAST HEIM
	setarray @pDmenuitems$[@Di], "Glast Heim Dungeon";
	setarray @pDmenuitemsUnl$[@Di], "Glast Heim Dungeon";
	setarray @pDprice[@Di], $QW_BW_PRICE;
	setarray @pDfee$[@Di], "$QW_BW_FEE";
	setarray @DLevels[@Di], 17;
	setarray @pDUnlockRef[@Di],15;

	setarray @DGat$[@Dref], "glast_01", "gl_church", "gl_chyard", "gl_in01", "gl_cas01", "gl_cas02", "gl_knt01", "gl_knt02", "gl_prison", "gl_prison1", "gl_step", "gl_sew01", "gl_sew02", "gl_sew03", "gl_sew04", "gl_dun01", "gl_dun02";
	setarray @DLevelName$[@Dref], "Glast Heim Entrance", "St. Abbey", "Churchyard", "Inside Glast Heim", "Castle 1", "Castle 2", "Chivalry 1", "Chivalry 2", "Prison 1", "Prison 2", "Steps", "Sewers 1", "Sewers 2", "Sewers 3", "Sewers 4", "Lowest Cave 1", "Lowest Cave 2";
	setarray @DXcoords[@Dref], 370, 156, 147, 121, 199, 104, 150, 157, 14, 150, 117, 258, 108, 171, 68, 133, 224;
	setarray @DYcoords[@Dref], 300, 8, 15, 59, 29, 25, 10, 287, 70, 14, 124, 255, 291, 273, 277, 271, 274;
	setarray @DDepth[@Dref], 0, 1, 2, 1, 1, 2, 1, 2, 2, 3, 1, 4, 2, 3, 4, 5, 6;

	if(getarg(0) == 2){ QWS_Make_Dungeon_Menu 15;}
	if(getarg(0) == 1){ QWS_Make_Dungeon_Unlock 15;}

//----------------KUNLUN DUNGEON
	setarray @pDmenuitems$[@Di], "Kunlun Dungeon";
	setarray @pDmenuitemsUnl$[@Di], "Kunlun Dungeon";
	setarray @pDprice[@Di], $QW_OW_PRICE;
	setarray @pDfee$[@Di], "$QW_OW_FEE";
	setarray @DLevels[@Di], 3;
	setarray @pDUnlockRef[@Di],16;

	setarray @DGat$[@Dref], "gon_dun01", "gon_dun02", "gon_dun03";
	setarray @DLevelName$[@Dref], "Level 1", "Level 2", "Level 3";
	setarray @DXcoords[@Dref], 143, 17, 68;
	setarray @DYcoords[@Dref], 59, 114, 9;
	setarray @DDepth[@Dref], 0, 1, 2;

	if(getarg(0) == 2){ QWS_Make_Dungeon_Menu 16;}
	if(getarg(0) == 1){ QWS_Make_Dungeon_Unlock 16;}

//----------------HIDDEN DUNGEON
	setarray @pDmenuitems$[@Di], "Hidden Dungeon";
	setarray @pDmenuitemsUnl$[@Di], "Hidden Dungeon";
	setarray @pDprice[@Di], $QW_BW_PRICE;
	setarray @pDfee$[@Di], "$QW_BW_FEE";
	setarray @DLevels[@Di], 3;
	setarray @pDUnlockRef[@Di],17;

	setarray @DGat$[@Dref], "prt_maze01", "prt_maze02", "prt_maze03";
	setarray @DLevelName$[@Dref], "Level 1", "Level 2", "Level 3";
	setarray @DXcoords[@Dref], 176, 94, 23;
	setarray @DYcoords[@Dref], 6, 19, 8;
	setarray @DDepth[@Dref], 0, 1, 2;

	if(getarg(0) == 2){ QWS_Make_Dungeon_Menu 17;}
	if(getarg(0) == 1){ QWS_Make_Dungeon_Unlock 17;}

//----------------JUPEROS CAVE
	setarray @pDmenuitems$[@Di], "Juperos Cave";
	setarray @pDmenuitemsUnl$[@Di], "Juperos Cave";
	setarray @pDprice[@Di], $QW_AW_PRICE;
	setarray @pDfee$[@Di], "$QW_AW_FEE";
	setarray @DLevels[@Di], 2;
	setarray @pDUnlockRef[@Di],18;

	setarray @DGat$[@Dref], "juperos_01", "juperos_02";
	setarray @DLevelName$[@Dref], "Level 1", "Level 2";
	setarray @DXcoords[@Dref], 53, 36;
	setarray @DYcoords[@Dref], 247, 60;
	setarray @DDepth[@Dref], 0, 1;

	if(getarg(0) == 2){ QWS_Make_Dungeon_Menu 18;}
	if(getarg(0) == 1){ QWS_Make_Dungeon_Unlock 18;}

//----------------KIEL DUNGEON
	setarray @pDmenuitems$[@Di], "Kiel Dungeon";
	setarray @pDmenuitemsUnl$[@Di], "Kiel Dungeon";
	setarray @pDprice[@Di], $QW_AW_PRICE;
	setarray @pDfee$[@Di], "$QW_AW_FEE";
	setarray @DLevels[@Di], 2;
	setarray @pDUnlockRef[@Di],19;

	setarray @DGat$[@Dref], "kh_dun01", "kh_dun02";
	setarray @DLevelName$[@Dref], "1st Floor", "2nd Floor";
	setarray @DXcoords[@Dref], 63, 42;
	setarray @DYcoords[@Dref], 10, 197;
	setarray @DDepth[@Dref], 0, 1;

	if(getarg(0) == 2){ QWS_Make_Dungeon_Menu 19;}
	if(getarg(0) == 1){ QWS_Make_Dungeon_Unlock 19;}

//----------------LIGHTHALZEN BIO LAB
	setarray @pDmenuitems$[@Di], "Lighthalzen Bio Lab";
	setarray @pDmenuitemsUnl$[@Di], "Lighthalzen Bio Lab";
	setarray @pDprice[@Di], $QW_AW_PRICE;
	setarray @pDfee$[@Di], "$QW_AW_FEE";
	setarray @DLevels[@Di], 3;
	setarray @pDUnlockRef[@Di],20;

	setarray @DGat$[@Dref], "lhz_dun01", "lhz_dun02", "lhz_dun03";
	setarray @DLevelName$[@Dref], "Level 1", "Level 2", "Level 3";
	setarray @DXcoords[@Dref], 150, 150, 140;
	setarray @DYcoords[@Dref], 287, 18, 137;
	setarray @DDepth[@Dref], 0, 1, 2;

	if(getarg(0) == 2){ QWS_Make_Dungeon_Menu 20;}
	if(getarg(0) == 1){ QWS_Make_Dungeon_Unlock 20;}

//----------------LOUYANG DUNGEON
	setarray @pDmenuitems$[@Di], "Louyang Dungeon";
	setarray @pDmenuitemsUnl$[@Di], "Louyang Dungeon";
	setarray @pDprice[@Di], $QW_OW_PRICE;
	setarray @pDfee$[@Di], "$QW_OW_FEE";
	setarray @DLevels[@Di], 2;
	setarray @pDUnlockRef[@Di],21;

	setarray @DGat$[@Dref], "lou_dun02", "lou_dun03";
	setarray @DLevelName$[@Dref], "Royal Tomb Level 1", "Royal Tomb Level 2";
	setarray @DXcoords[@Dref], 282, 165;
	setarray @DYcoords[@Dref], 20, 38;
	setarray @DDepth[@Dref], 0, 1;

	if(getarg(0) == 2){ QWS_Make_Dungeon_Menu 21;}
	if(getarg(0) == 1){ QWS_Make_Dungeon_Unlock 21;}

//----------------MAGMA DUNGEON
	setarray @pDmenuitems$[@Di], "Magma Dungeon";
	setarray @pDmenuitemsUnl$[@Di], "Magma Dungeon";
	setarray @pDprice[@Di], $QW_AW_PRICE;
	setarray @pDfee$[@Di], "$QW_AW_FEE";
	setarray @DLevels[@Di], 2;
	setarray @pDUnlockRef[@Di],22;

	setarray @DGat$[@Dref], "mag_dun01", "mag_dun02";
	setarray @DLevelName$[@Dref], "Level 1", "Level 2";
	setarray @DXcoords[@Dref], 126, 47;
	setarray @DYcoords[@Dref], 69, 32;
	setarray @DDepth[@Dref], 0, 1;

	if(getarg(0) == 2){ QWS_Make_Dungeon_Menu 22;}
	if(getarg(0) == 1){ QWS_Make_Dungeon_Unlock 22;}

//----------------ODIN TEMPLE
	setarray @pDmenuitems$[@Di], "Odin Temple";
	setarray @pDmenuitemsUnl$[@Di], "Odin Temple";
	setarray @pDprice[@Di], $QW_AW_PRICE;
	setarray @pDfee$[@Di], "$QW_AW_FEE";
	setarray @DLevels[@Di], 1;
	setarray @pDUnlockRef[@Di],23;

	setarray @DGat$[@Dref], "odin_tem01";
	setarray @DLevelName$[@Dref], "Level 1";
	setarray @DXcoords[@Dref], 96;
	setarray @DYcoords[@Dref], 145;
	setarray @DDepth[@Dref], 0;

	if(getarg(0) == 2){ QWS_Make_Dungeon_Menu 23;}
	if(getarg(0) == 1){ QWS_Make_Dungeon_Unlock 23;}

//----------------ORC DUNGEON
	setarray @pDmenuitems$[@Di], "Orc Dungeon";
	setarray @pDmenuitemsUnl$[@Di], "Orc Dungeon";
	setarray @pDprice[@Di], $QW_BW_PRICE;
	setarray @pDfee$[@Di], "$QW_BW_FEE";
	setarray @DLevels[@Di], 2;
	setarray @pDUnlockRef[@Di],24;

	setarray @DGat$[@Dref], "orcsdun01", "orcsdun02";
	setarray @DLevelName$[@Dref], "Level 1", "Level 2";
	setarray @DXcoords[@Dref], 32, 21;
	setarray @DYcoords[@Dref], 169, 185;
	setarray @DDepth[@Dref], 0, 1;

	if(getarg(0) == 2){ QWS_Make_Dungeon_Menu 24;}
	if(getarg(0) == 1){ QWS_Make_Dungeon_Unlock 24;}

//----------------PAYON DUNGEON
	setarray @pDmenuitems$[@Di], "Payon Dungeon";
	setarray @pDmenuitemsUnl$[@Di], "Payon Dungeon";
	setarray @pDprice[@Di], $QW_BW_PRICE;
	setarray @pDfee$[@Di], "$QW_BW_FEE";
	setarray @DLevels[@Di], 5;
	setarray @pDUnlockRef[@Di],25;

	setarray @DGat$[@Dref], "pay_dun00", "pay_dun01", "pay_dun02", "pay_dun03", "pay_dun04";
	setarray @DLevelName$[@Dref], "Level 1", "Level 2", "Level 3", "Level 4", "Level 5";
	setarray @DXcoords[@Dref], 22, 19, 19, 155, 201;
	setarray @DYcoords[@Dref], 180, 33, 63, 159, 204;
	setarray @DDepth[@Dref], 0, 1, 2, 3, 4;

	if(getarg(0) == 2){ QWS_Make_Dungeon_Menu 25;}
	if(getarg(0) == 1){ QWS_Make_Dungeon_Unlock 25;}

//----------------PYRAMIDS
	setarray @pDmenuitems$[@Di], "Pyramid Dungeon";
	setarray @pDmenuitemsUnl$[@Di], "Pyramid Dungeon";
	setarray @pDprice[@Di], $QW_BW_PRICE;
	setarray @pDfee$[@Di], "$QW_BW_FEE";
	setarray @DLevels[@Di], 6;
	setarray @pDUnlockRef[@Di],26;

	setarray @DGat$[@Dref], "moc_pryd01", "moc_pryd02", "moc_pryd03", "moc_pryd04", "moc_pryd05", "moc_pryd06";
	setarray @DLevelName$[@Dref], "Level 1", "Level 2", "Level 3", "Level 4", "Basement 1", "Basement 2";
	setarray @DXcoords[@Dref], 192, 10, 100, 181, 94, 192;
	setarray @DYcoords[@Dref], 9, 192, 92, 11, 96, 8;
	setarray @DDepth[@Dref], 0, 1, 2, 3, 1, 2;

	if(getarg(0) == 2){ QWS_Make_Dungeon_Menu 26;}
	if(getarg(0) == 1){ QWS_Make_Dungeon_Unlock 26;}

//----------------RA SANC
	setarray @pDmenuitems$[@Di], "Rachel Sanctuary";
	setarray @pDmenuitemsUnl$[@Di], "Rachel Sanctuary";
	setarray @pDprice[@Di], $QW_OW_PRICE;
	setarray @pDfee$[@Di], "$QW_OW_FEE";
	setarray @DLevels[@Di], 5;
	setarray @pDUnlockRef[@Di],27;

	setarray @DGat$[@Dref], "ra_san01", "ra_san02", "ra_san03", "ra_san04", "ra_san05";
	setarray @DLevelName$[@Dref], "Holy Ground Floor 1", "Holy Ground Floor 2", "Holy Ground Floor 3", "Holy Ground Floor 4", "Holy Ground Floor 5";
	setarray @DXcoords[@Dref], 140, 213, 10, 119, 149;
	setarray @DYcoords[@Dref], 132, 270, 149, 108, 11;
	setarray @DDepth[@Dref], 0, 1, 2, 3, 4, 5;

	if(getarg(0) == 2){ QWS_Make_Dungeon_Menu 27;}
	if(getarg(0) == 1){ QWS_Make_Dungeon_Unlock 27;}

//----------------SPHINX
	setarray @pDmenuitems$[@Di], "Sphinx Dungeon";
	setarray @pDmenuitemsUnl$[@Di], "Sphinx Dungeon";
	setarray @pDprice[@Di], $QW_BW_PRICE;
	setarray @pDfee$[@Di], "$QW_BW_FEE";
	setarray @DLevels[@Di], 5;
	setarray @pDUnlockRef[@Di],28;

	setarray @DGat$[@Dref], "in_sphinx1", "in_sphinx2", "in_sphinx3", "in_sphinx4", "in_sphinx5";
	setarray @DLevelName$[@Dref], "Level 1", "Level 2", "Level 3", "Level 4", "Level 5";
	setarray @DXcoords[@Dref], 192, 149, 210, 10, 100;
	setarray @DYcoords[@Dref], 9, 81, 54, 222, 99;
	setarray @DDepth[@Dref], 0, 1, 2, 3, 4;

	if(getarg(0) == 2){ QWS_Make_Dungeon_Menu 28;}
	if(getarg(0) == 1){ QWS_Make_Dungeon_Unlock 28;}

//----------------SUNKEN SHIP
	setarray @pDmenuitems$[@Di], "Sunken Ship Dungeon";
	setarray @pDmenuitemsUnl$[@Di], "Sunken Ship Dungeon";
	setarray @pDprice[@Di], $QW_BW_PRICE;
	setarray @pDfee$[@Di], "$QW_BW_FEE";
	setarray @DLevels[@Di], 2;
	setarray @pDUnlockRef[@Di],29;

	setarray @DGat$[@Dref], "treasure01", "treasure02";
	setarray @DLevelName$[@Dref], "Level 1", "Level 2";
	setarray @DXcoords[@Dref], 69, 102;
	setarray @DYcoords[@Dref], 24, 27;
	setarray @DDepth[@Dref], 0, 1;

	if(getarg(0) == 2){ QWS_Make_Dungeon_Menu 29;}
	if(getarg(0) == 1){ QWS_Make_Dungeon_Unlock 29;}

//----------------THANATOS TOWER
	setarray @pDmenuitems$[@Di], "Thanatos Tower";
	setarray @pDmenuitemsUnl$[@Di], "Thanatos Tower";
	setarray @pDprice[@Di], $QW_AW_PRICE;
	setarray @pDfee$[@Di], "$QW_AW_FEE";
	setarray @DLevels[@Di], 13;
	setarray @pDUnlockRef[@Di],30;

	setarray @DGat$[@Dref], "tha_t01", "tha_t02", "tha_t03", "tha_t04", "tha_t05", "tha_t06", "tha_t07", "tha_t08", "tha_t09", "tha_t10", "tha_t11", "tha_t12", "thana_boss";
	setarray @DLevelName$[@Dref], "Level 1", "Level 2", "Level 3", "Level 4", "Level 5", "Level 6", "Level 7", "Level 8", "Level 9", "Level 10", "Level 11", "Level 12", "Thanatos Boss";
	setarray @DXcoords[@Dref], 150, 150, 220, 59, 62, 206, 35, 105, 88, 168, 90, 129, 85;
	setarray @DYcoords[@Dref], 35, 136, 158, 143, 11, 8, 166, 44, 145, 138, 36, 83, 76;
	setarray @DDepth[@Dref], 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12;

	if(getarg(0) == 2){ QWS_Make_Dungeon_Menu 30;}
	if(getarg(0) == 1){ QWS_Make_Dungeon_Unlock 30;}
	
//----------------THORS VOLCANO
	setarray @pDmenuitems$[@Di], "Thor's Volcano";
	setarray @pDmenuitemsUnl$[@Di], "Thor's Volcano";
	setarray @pDprice[@Di], $QW_OW_PRICE;
	setarray @pDfee$[@Di], "$QW_OW_FEE";
	setarray @DLevels[@Di], 3;
	setarray @pDUnlockRef[@Di],31;

	setarray @DGat$[@Dref], "thor_v01", "thor_v02", "thor_v03";
	setarray @DLevelName$[@Dref], "Level 1", "Level 2", "Level 3";
	setarray @DXcoords[@Dref], 21, 78, 34;
	setarray @DYcoords[@Dref], 230, 203, 262;
	setarray @DDepth[@Dref], 0, 1, 2;

	if(getarg(0) == 2){ QWS_Make_Dungeon_Menu 31;}
	if(getarg(0) == 1){ QWS_Make_Dungeon_Unlock 31;}

//----------------TOY FACTORY
	setarray @pDmenuitems$[@Di], "Toy Factory Dungeon";
	setarray @pDmenuitemsUnl$[@Di], "Toy Factory Dungeon";
	setarray @pDprice[@Di], $QW_AW_PRICE;
	setarray @pDfee$[@Di], "$QW_AW_FEE";
	setarray @DLevels[@Di], 2;
	setarray @pDUnlockRef[@Di],32;

	setarray @DGat$[@Dref], "xmas_dun01", "xmas_dun02";
	setarray @DLevelName$[@Dref], "Factory Warehouse", "Classifying Room";
	setarray @DXcoords[@Dref], 205, 129;
	setarray @DYcoords[@Dref], 16, 133;
	setarray @DDepth[@Dref], 0, 1;

	if(getarg(0) == 2){ QWS_Make_Dungeon_Menu 32;}
	if(getarg(0) == 1){ QWS_Make_Dungeon_Unlock 32;}

//----------------TURTLE ISTLAND
	setarray @pDmenuitems$[@Di], "Turtle Island Dungeon";
	setarray @pDmenuitemsUnl$[@Di], "Turtle Island Dungeon";
	setarray @pDprice[@Di], $QW_AW_PRICE;
	setarray @pDfee$[@Di], "$QW_AW_FEE";
	setarray @DLevels[@Di], 4;
	setarray @pDUnlockRef[@Di],33;

	setarray @DGat$[@Dref], "tur_dun01", "tur_dun02", "tur_dun03", "tur_dun04";
	setarray @DLevelName$[@Dref], "Outside", "Level 1", "Level 2", "Level 3";
	setarray @DXcoords[@Dref], 161, 148, 132, 100;
	setarray @DYcoords[@Dref], 34, 256, 190, 192;
	setarray @DDepth[@Dref], 0, 0, 1, 2;

	if(getarg(0) == 2){ QWS_Make_Dungeon_Menu 33;}
	if(getarg(0) == 1){ QWS_Make_Dungeon_Unlock 33;}

//----------------UMBALA
	setarray @pDmenuitems$[@Di], "Umbala Dungeon";
	setarray @pDmenuitemsUnl$[@Di], "Umbala Dungeon";
	setarray @pDprice[@Di], $QW_OW_PRICE;
	setarray @pDfee$[@Di], "$QW_OW_FEE";
	setarray @DLevels[@Di], 3;
	setarray @pDUnlockRef[@Di],34;

	setarray @DGat$[@Dref], "um_dun01", "um_dun02", "yggdrasil01";
	setarray @DLevelName$[@Dref], "Carpenter's Shop in The Tree", "Passage to a Foreign World", "Hvergelmir's Fountain";
	setarray @DXcoords[@Dref], 205, 48, 40;
	setarray @DYcoords[@Dref], 26, 30, 63;
	setarray @DDepth[@Dref], 0, 1, 2;

	if(getarg(0) == 2){ QWS_Make_Dungeon_Menu 34;}
	if(getarg(0) == 1){ QWS_Make_Dungeon_Unlock 34;}
	

//----------------Cancel
	setarray @pDmenuitems$[@Di], "[^FF0000Cancel^000000]";
	setarray @pDmenuitemsUnl$[@Di],  "[^FF0000Cancel^000000]";
	setarray @pDprice[@Di], 0;

	set @Dmenulist$[@Dj],@pDmenuitems$[@Di];
	set @DmenulistUnl$[@Dju],@pDmenuitemsUnl$[@Di];
	set @Dmenuref[@Dj],57005; // 57005='dead' in hex
	set @DmenurefUnl[@Dju],57005; // 57005='dead' in hex
	return;


//----------------Make Dungeon Menu Function

function	QWS_Make_Dungeon_Menu	{
	set @tempdungeonmenubin,1;
	if (getarg(0) == 0) goto menu_item;
	set @temploopdungeonmenu,0;
	do {
		set @tempdungeonmenubin, @tempdungeonmenubin * 2;
		set @temploopdungeonmenu, @temploopdungeonmenu + 1;
		}while (getarg(0) > @temploopdungeonmenu);
// check marker and make menu item
menu_item:
	if ((@tempdungeonmenubin & ##QWS_D_Unlock) != @tempdungeonmenubin) {
		setarray @DLocRef[@Di], @Dref;
		set @Dref, @Dref+@DLevels[@Di];
		set @Di,@Di+1;
		return;
	}
	if ($QW_MapUserShow == 1) {
		set @tempmapusers,0;
		set @mapusersloop,0;
		do {
			set @tempmapusers,(getmapusers(@DGat$[@Dref+@mapusersloop]) + @tempmapusers);
			set @mapusersloop, (@mapusersloop + 1);
		} while (@DLevels[@Di] > @mapusersloop);
		if (@pDprice[@Di] != 0) set @Dmenulist$[@Dj], @pDmenuitems$[@Di]+" [^6db002"+@tempmapusers+"^000000] -> ^c27e17"+callfunc("F_InsertComma",@pDprice[@Di])+"^000000z";
		if (@pDprice[@Di] == 0) set @Dmenulist$[@Dj], @pDmenuitems$[@Di]+" [^6db002"+@tempmapusers+"^000000]";
		set @Dmenuref[@Dj],@Di;
		set @Dj,@Dj+1;
		setarray @DLocRef[@Di], @Dref;
		set @Dref, @Dref+@DLevels[@Di];
		set @Di,@Di+1;
		return;
	}
	if (@pDprice[@Di] != 0) set @Dmenulist$[@Dj], @pDmenuitems$[@Di]+" -> ^c27e17"+callfunc("F_InsertComma",@pDprice[@Di])+"^000000z";
	if (@pDprice[@Di] == 0) set @Dmenulist$[@Dj], @pDmenuitems$[@Di];
	set @Dmenuref[@Dj],@Di;
	set @Dj,@Dj+1;
	setarray @DLocRef[@Di], @Dref;
	set @Dref, @Dref+@DLevels[@Di];
	set @Di,@Di+1;
	return;
}

function	QWS_Make_Dungeon_Unlock	{
	set @tempdungeonmenubin,1;
	if (getarg(0) == 0) goto menu_item_unl;
	set @temploopdungeonmenu,0;
	do {
		set @tempdungeonmenubin, @tempdungeonmenubin * 2;
		set @temploopdungeonmenu, @temploopdungeonmenu + 1;
		}while (getarg(0) > @temploopdungeonmenu);
// check marker and make menu item
menu_item_unl:
	if ((@tempdungeonmenubin & ##QWS_D_Unlock) == @tempdungeonmenubin) {
		set @Di,@Di+1;
		return;
	}

	set @DmenulistUnl$[@Dju], @pDmenuitemsUnl$[@Di];
	set @DmenurefUnl[@Dju],@pDUnlockRef[@Di];
	set @Dju,@Dju+1;
	set @Di,@Di+1;
	return;
}
}

function	script	QWS_DLarray	{
//----------------Start building Menu
	set @DWref,@DLocRef[@DwarpMenu]; // reference to the arrays with leveldata
	set @DWi,0;  // loop counter
	set @DWj,0; // menu lines counter
	cleararray @DWLmenulist$[0],"",20; // Clearing the array to get rid off ghost items in menu
	do {
		if ($QW_DL == 0)||($QW_DDL >= @DDepth[@DWref]) {
			set @warpprice, (@pDprice[@DwarpMenu]+ (getd(@pDfee$[@DwarpMenu])*@DDepth[@DWref]));
			if (@warpprice != 0)&&($QW_MapUserShow == 0) set @DWLmenulist$[@DWj], @DLevelName$[@DWref]+" -> ^c27e17"+@warpprice+"^000000z";
			if (@warpprice == 0)&&($QW_MapUserShow == 0) set @DWLmenulist$[@DWj], @DLevelName$[@DWref];
			if (@warpprice != 0)&&($QW_MapUserShow == 1) set @DWLmenulist$[@DWj], @DLevelName$[@DWref]+" [^6db002"+getmapusers(@DGat$[@DWref])+"^000000] -> ^c27e17"+callfunc("F_InsertComma",@warpprice)+"^000000z";
			if (@warpprice == 0)&&($QW_MapUserShow == 1) set @DWLmenulist$[@DWj], @DLevelName$[@DWref]+" [^6db002"+getmapusers(@DGat$[@DWref])+"^000000]";
			set @DWLmenuref[@DWj],@DWref;
			set @DWj,@DWj+1;
		}
		set @DWref, @DWref+1;
		set @DWi,@DWi+1;
	} while (@DWi < @DLevels[@DwarpMenu]);
	set @DWLmenulist$[@DWj], "Exit";
	set @DWLmenuref[@DWj],57005; // 57005='dead' in hex
	return;
}

//================Dungeon=Warpras=That=Only=Unlock=================

function	script	QWS_Dungeon_Warpra	{
	function QWS_D_getbin;
	function QWS_D_setbin;
	
	if ((QWS_D_getbin(getarg(0)) == 0) && (getarg(1) != "")) {
		mes "[^004bedBlitzRO Warpra^000000]";
		mes getarg(1)+" unlocked!";
		getitem 674,rand(3,5);
		QWS_D_setbin(getarg(0));
		return;
	} else if (QWS_D_getbin(getarg(0)) == 1) {
		mes "[^004bedBlitzRO Warpra^000000]";
		mes "I've already unlocked this location for you!";
	} else
		debugmes "QWS_Dungeon_Warpra error, improper syntax?";
	return;


function	QWS_D_setbin	{
	set @tempsetbindata,1;
	if (getarg(0) == 0) goto binset;
	set @temploopsetbin,0;
	do {
		set @tempsetbindata, @tempsetbindata * 2;
		set @temploopsetbin, @temploopsetbin + 1;
	} while (getarg(0) > @temploopsetbin);
binset:
	set ##QWS_D_Unlock,(##QWS_D_Unlock | @tempsetbindata);
	return;
}

function	QWS_D_getbin	{
	set @tempgetbindata,1;
	if (getarg(0) == 0) goto binget;
	set @temploopgetbin,0;
	do {
		set @tempgetbindata, @tempgetbindata * 2;
		set @temploopgetbin, @temploopgetbin + 1;
	} while (getarg(0) > @temploopgetbin);
binget:
	if ((@tempgetbindata & ##QWS_D_Unlock) == @tempgetbindata) return 1;
	return 0;
}
}

function	script	QWS_Dungeon_GoPoof	{
	function QWS_D_getbin2;
	function QWS_D_setbin2;
	
	if ((QWS_D_getbin2(getarg(0)) == 0) && (getarg(1) != "")) {
		return;
	} else if (QWS_D_getbin2(getarg(0)) == 1) {
		classchange HIDDEN_WARP_NPC, strnpcinfo(0), bc_self;
		end;
	} else
		debugmes "QWS_Dungeon_Warpra error, improper syntax?";
	return;


function	QWS_D_setbin2	{
	set @tempsetbindata,1;
	if (getarg(0) == 0) goto binset;
	set @temploopsetbin,0;
	do {
		set @tempsetbindata, @tempsetbindata * 2;
		set @temploopsetbin, @temploopsetbin + 1;
	} while (getarg(0) > @temploopsetbin);
binset:
	set ##QWS_D_Unlock,(##QWS_D_Unlock | @tempsetbindata);
	return;
}

function	QWS_D_getbin2	{
	set @tempgetbindata,1;
	if (getarg(0) == 0) goto binget;
	set @temploopgetbin,0;
	do {
		set @tempgetbindata, @tempgetbindata * 2;
		set @temploopgetbin, @temploopgetbin + 1;
	} while (getarg(0) > @temploopgetbin);
binget:
	if ((@tempgetbindata & ##QWS_D_Unlock) == @tempgetbindata) return 1;
	return 0;
}
}

//==========================Town=Warpras===========================

function	script	QWS_Town_Warpra	{
	function QWS_T_getbin;
	function QWS_T_setbin;
	
	if ((QWS_T_getbin(getarg(0)) == 0) && (getarg(1) != "")) {
		mes "[^004bedBlitzRO Warpra^000000]";
		mes getarg(1)+" unlocked!";
		getitem 674,rand(3,5);
		QWS_T_setbin(getarg(0));
		return;
	} else if (QWS_T_getbin(getarg(0)) == 1) {
		callfunc "Q_Warpra",0;
	} else
		debugmes "QWS_Town_Warpra error, improper syntax ?";
	return;

function	QWS_T_setbin	{
	set @tempsetbindata,1;
	if (getarg(0) == 0) goto binset;
	set @temploopsetbin,0;
	do {
		set @tempsetbindata, @tempsetbindata * 2;
		set @temploopsetbin, @temploopsetbin + 1;
	} while (getarg(0) > @temploopsetbin);
binset:
	set ##QWS_T_Unlock,(##QWS_T_Unlock | @tempsetbindata);
	return;
}

function	QWS_T_getbin	{
	set @tempgetbindata,1;
	if (getarg(0) == 0) goto binget;
	set @temploopgetbin,0;
	do {
		set @tempgetbindata, @tempgetbindata * 2;
		set @temploopgetbin, @temploopgetbin + 1;
	} while (getarg(0) > @temploopgetbin);
binget:
	if ((@tempgetbindata & ##QWS_T_Unlock) == @tempgetbindata) return 1;
	return 0;
}
}
//============================Warpras==============================

-	script	bRO Warpra#0	-1,{ callfunc "Q_Warpra",1; }
alb2trea,73,101,4	duplicate(bRO Warpra#0)	bRO Warpra#1	860
ama_fild01,178,325,1	duplicate(bRO Warpra#0)	bRO Warpra#2	860
gef_fild10,71,339,4	duplicate(bRO Warpra#0)	bRO Warpra#3	860
izlu2dun,104,82,4	duplicate(bRO Warpra#0)	bRO Warpra#4	860
mjolnir_02,85,363,4	duplicate(bRO Warpra#0)	bRO Warpra#5	860
moc_fild04,207,331,4	duplicate(bRO Warpra#0)	bRO Warpra#6	860
moc_fild19,106,97,4	duplicate(bRO Warpra#0)	bRO Warpra#7	860
moc_ruins,64,166,4	duplicate(bRO Warpra#0)	bRO Warpra#8	860
niflheim,197,192,3	duplicate(bRO Warpra#0)	bRO Warpra#9	860
pay_arche,39,135,4	duplicate(bRO Warpra#0)	bRO Warpra#10	860
prt_fild05,273,215,4	duplicate(bRO Warpra#0)	bRO Warpra#11	860
tur_dun01,148,239,4	duplicate(bRO Warpra#0)	bRO Warpra#12	860
valkyrie,48,35,8	duplicate(bRO Warpra#0)	bRO Warpra#13	860
yuno_fild03,37,135,4	duplicate(bRO Warpra#0)	bRO Warpra#14	860

prontera,158,196,4	script	bRO Warpra#32	860,9,9,{ callfunc "QWS_Town_Warpra",0,"Prontera Town"; close; OnTouch: showscript "[ Warpra ]",getnpcid(0); end; }
prt_in,55,143,4	script	bRO Warpra#46	860,4,4,{ callfunc "QWS_Town_Warpra",0,"Prontera Town"; close; OnTouch: showscript "[ Warpra ]",getnpcid(0); end; }
alberta,32,240,4	script	bRO Warpra#15	860,9,9,{ callfunc "QWS_Town_Warpra",1,"Alberta Town"; close; OnTouch: showscript "[ Warpra ]",getnpcid(0); end; }
aldebaran,146,118,4	script	bRO Warpra#16	860,9,9,{ callfunc "QWS_Town_Warpra",2,"Aldebaran Town"; close; OnTouch: showscript "[ Warpra ]",getnpcid(0); end; }
ayothaya,216,171,5	script	bRO Warpra#17	860,9,9,{ callfunc "QWS_Town_Warpra",4,"Ayothaya Town"; close; OnTouch: showscript "[ Warpra ]",getnpcid(0); end; }
amatsu,193,81,1	script	bRO Warpra#18	860,9,9,{ callfunc "QWS_Town_Warpra",3,"Amatsu Town"; close; OnTouch: showscript "[ Warpra ]",getnpcid(0); end; }
comodo,195,158,4	script	bRO Warpra#19	860,9,9,{ callfunc "QWS_Town_Warpra",5,"Comodo Town"; close; OnTouch: showscript "[ Warpra ]",getnpcid(0); end; }
einbroch,229,196,5	script	bRO Warpra#20	860,9,9,{ callfunc "QWS_Town_Warpra",10,"Einbroch Town"; close; OnTouch: showscript "[ Warpra ]",getnpcid(0); end; }
einbech,173,131,5	script	bRO Warpra#21	860,9,9,{ callfunc "QWS_Town_Warpra",9,"Einbech Town"; close; OnTouch: showscript "[ Warpra ]",getnpcid(0); end; }
geffen,116,75,4	script	bRO Warpra#22	860,9,9,{ callfunc "QWS_Town_Warpra",12,"Geffen Town"; close; OnTouch: showscript "[ Warpra ]",getnpcid(0); end; }
gonryun,152,130,4	script	bRO Warpra#23	860,9,9,{ callfunc "QWS_Town_Warpra",13,"Kunlun Town"; close; OnTouch: showscript "[ Warpra ]",getnpcid(0); end; }
hugel,90,127,5	script	bRO Warpra#24	860,9,9,{ callfunc "QWS_Town_Warpra",14,"Hugel Town"; close; OnTouch: showscript "[ Warpra ]",getnpcid(0); end; }
jawaii,107,182,5	script	bRO Warpra#25	860,9,9,{ callfunc "QWS_Town_Warpra",16,"Jawaii Town"; close; OnTouch: showscript "[ Warpra ]",getnpcid(0); end; }
izlude,125,148,4	script	bRO Warpra#26	860,9,9,{ callfunc "QWS_Town_Warpra",15,"Izlude Town"; close; OnTouch: showscript "[ Warpra ]",getnpcid(0); end; }
izlude,187,78,4	script	bRO Warpra#26A	860,9,9,{ callfunc "QWS_Town_Warpra",15,"Izlude Town"; close; OnTouch: showscript "[ Warpra ]",getnpcid(0); end; }
iz_ac01,103,44,4	script	bRO Warpra#47	860,9,9,{ callfunc "QWS_Town_Warpra",15,"Izlude Town"; close; OnTouch: showscript "[ Warpra ]",getnpcid(0); end; }
lighthalzen,153,100,5	script	bRO Warpra#27	860,9,9,{ callfunc "QWS_Town_Warpra",17,"Lighthalzen Town"; close; OnTouch: showscript "[ Warpra ]",getnpcid(0); end; }
louyang,211,106,4	script	bRO Warpra#28	860,9,9,{ callfunc "QWS_Town_Warpra",18,"Luoyang Town"; close; OnTouch: showscript "[ Warpra ]",getnpcid(0); end; }
morocc,157,95,4	script	bRO Warpra#29	860,9,9,{ callfunc "QWS_Town_Warpra",22,"Morocc Town"; close; OnTouch: showscript "[ Warpra ]",getnpcid(0); end; }
moc_para01,51,36,3	script	bRO Warpra#49	860,9,9,{ callfunc "QWS_Town_Warpra",22,"Morocc Town"; close; OnTouch: showscript "[ Warpra ]",getnpcid(0); end; }
nif_fild01,319,77,1	script	bRO Warpra#30	860,9,9,{ callfunc "QWS_Town_Warpra",24,"Niflheim Town"; close; OnTouch: showscript "[ Warpra ]",getnpcid(0); end; }
payon,183,110,4	script	bRO Warpra#31	860,9,9,{ callfunc "QWS_Town_Warpra",25,"Payon Town"; close; OnTouch: showscript "[ Warpra ]",getnpcid(0); end; }
umbala,133,130,4	script	bRO Warpra#33	860,9,9,{ callfunc "QWS_Town_Warpra",28,"Umbala Town"; close; OnTouch: showscript "[ Warpra ]",getnpcid(0); end; }
xmas,151,136,4	script	bRO Warpra#34	860,9,9,{ callfunc "QWS_Town_Warpra",19,"Lutie Town"; close; OnTouch: showscript "[ Warpra ]",getnpcid(0); end; }
yuno,138,162,4	script	bRO Warpra#35	860,9,9,{ callfunc "QWS_Town_Warpra",30,"Yuno Town"; close; OnTouch: showscript "[ Warpra ]",getnpcid(0); end; }
brasilis,201,222,4	script	bRO Warpra#36	860,9,9,{ callfunc "QWS_Town_Warpra",5,"Brasilis Town"; close; OnTouch: showscript "[ Warpra ]",getnpcid(0); end; }
dicastes01,194,194,6	script	bRO Warpra#37	860,9,9,{ callfunc "QWS_Town_Warpra",11,"El Dicastes Town"; close; OnTouch: showscript "[ Warpra ]",getnpcid(0); end; }
manuk,262,177,4	script	bRO Warpra#38	860,9,9,{ callfunc "QWS_Town_Warpra",20,"Manuk Town"; close; OnTouch: showscript "[ Warpra ]",getnpcid(0); end; }
mora,110,100,4	script	bRO Warpra#39	860,9,9,{ callfunc "QWS_Town_Warpra",21,"Mora Town"; close; OnTouch: showscript "[ Warpra ]",getnpcid(0); end; }
moscovia,216,196,6	script	bRO Warpra#40	860,9,9,{ callfunc "QWS_Town_Warpra",23,"Moscovia Town"; close; OnTouch: showscript "[ Warpra ]",getnpcid(0); end; }
rachel,135,116,4	script	bRO Warpra#41	860,9,9,{ callfunc "QWS_Town_Warpra",26,"Rachel Town"; close; OnTouch: showscript "[ Warpra ]",getnpcid(0); end; }
splendide,205,153,4	script	bRO Warpra#42	860,9,9,{ callfunc "QWS_Town_Warpra",27,"Splendide Town"; close; OnTouch: showscript "[ Warpra ]",getnpcid(0); end; }
veins,214,123,4	script	bRO Warpra#43	860,9,9,{ callfunc "QWS_Town_Warpra",29,"Veins Town"; close; OnTouch: showscript "[ Warpra ]",getnpcid(0); end; }
dewata,194,178,6	script	bRO Warpra#44	860,9,9,{ callfunc "QWS_Town_Warpra",7,"Dewata Town"; close; OnTouch: showscript "[ Warpra ]",getnpcid(0); end; }
eclage,107,37,4	script	bRO Warpra#45	860,9,9,{ callfunc "QWS_Town_Warpra",8,"Eclage Town"; close; OnTouch: showscript "[ Warpra ]",getnpcid(0); end; }
dorado,198,146,4	script	bRO Warpra#48	860,9,9,{ callfunc "QWS_Town_Warpra",31,"Dorado Town"; close; OnTouch: showscript "[ Warpra ]",getnpcid(0); end; }

abyss_02,274,266,1	script	bRO Warpra Helper#0	860,14,14,{ callfunc "QWS_Dungeon_Warpra",0,"Abyss Lake"; close; OnTouch: callfunc "QWS_Dungeon_GoPoof",0,"Abyss Lake"; end; }
ama_dun02,192,118,5	script	bRO Warpra Helper#1	860,14,14,{ callfunc "QWS_Dungeon_Warpra",1,"Amatsu Dungeon"; close; OnTouch: callfunc "QWS_Dungeon_GoPoof",1,"Amatsu Dungeon"; end; }
anthell02,170,165,3	script	bRO Warpra Helper#2	860,14,14,{ callfunc "QWS_Dungeon_Warpra",2,"Ant Hell Dungeon"; close; OnTouch: callfunc "QWS_Dungeon_GoPoof",2,"Ant Hell Dungeon"; end; }
ayo_dun02,258,193,5	script	bRO Warpra Helper#3	860,14,14,{ callfunc "QWS_Dungeon_Warpra",3,"Ayothaya Dungeon"; close; OnTouch: callfunc "QWS_Dungeon_GoPoof",3,"Ayothaya Dungeon"; end; }
ein_dun02,292,282,1	script	bRO Warpra Helper#4	860,14,14,{ callfunc "QWS_Dungeon_Warpra",12,"Einbech Dungeon"; close; OnTouch: callfunc "QWS_Dungeon_GoPoof",12,"Einbech Dungeon"; end; }
iz_dun03,202,47,2	script	bRO Warpra Helper#5	860,14,14,{ callfunc "QWS_Dungeon_Warpra",6,"Byalan Dungeon"; close; OnTouch: callfunc "QWS_Dungeon_GoPoof",6,"Byalan Dungeon"; end; }
c_tower3,129,106,4	script	bRO Warpra Helper#6	860,14,14,{ callfunc "QWS_Dungeon_Warpra",7,"Clock Tower Dungeon"; close; OnTouch: callfunc "QWS_Dungeon_GoPoof",7,"Clock Tower Dungeon"; end; }
mjo_dun02,39,25,4	script	bRO Warpra Helper#7	860,14,14,{ callfunc "QWS_Dungeon_Warpra",8,"Coal Mine Dungeon"; close; OnTouch: callfunc "QWS_Dungeon_GoPoof",8,"Coal Mine Dungeon"; end; }
prt_sewb2,176,30,3	script	bRO Warpra Helper#8	860,14,14,{ callfunc "QWS_Dungeon_Warpra",9,"Culvert Dungeon"; close; OnTouch: callfunc "QWS_Dungeon_GoPoof",9,"Culvert Dungeon"; end; }
gefenia03,137,34,0	script	bRO Warpra Helper#9	860,14,14,{ callfunc "QWS_Dungeon_Warpra",13,"Gefenia Dungeon"; close; OnTouch: callfunc "QWS_Dungeon_GoPoof",13,"Gefenia Dungeon"; end; }
gef_dun02,218,61,2	script	bRO Warpra Helper#10	860,14,14,{ callfunc "QWS_Dungeon_Warpra",14,"Geffen Dungeon"; close; OnTouch: callfunc "QWS_Dungeon_GoPoof",14,"Geffen Dungeon"; end; }
glast_01,371,308,3	script	bRO Warpra Helper#11	860,14,14,{ callfunc "QWS_Dungeon_Warpra",15,"Glast Heim Dungeon"; close; OnTouch: callfunc "QWS_Dungeon_GoPoof",15,"Glast Heim Dungeon"; end; }
gon_dun01,167,273,4	script	bRO Warpra Helper#12	860,14,14,{ callfunc "QWS_Dungeon_Warpra",16,"Kunlun Dungeon"; close; OnTouch: callfunc "QWS_Dungeon_GoPoof",16,"Kunlun Dungeon"; end; }
juperos_02,127,154,5	script	bRO Warpra Helper#13	860,14,14,{ callfunc "QWS_Dungeon_Warpra",18,"Juperos Cave"; close; OnTouch: callfunc "QWS_Dungeon_GoPoof",18,"Juperos Cave"; end; }
kh_dun01,14,224,3	script	bRO Warpra Helper#14	860,14,14,{ callfunc "QWS_Dungeon_Warpra",19,"Kiel Dungeon"; close; OnTouch: callfunc "QWS_Dungeon_GoPoof",19,"Kiel Dungeon"; end; }
lhz_dun02,156,151,5	script	bRO Warpra Helper#15	860,14,14,{ callfunc "QWS_Dungeon_Warpra",20,"Lighthalzen Bio Lab"; close; OnTouch: callfunc "QWS_Dungeon_GoPoof",20,"Lighthalzen Bio Lab"; end; }
lou_dun02,168,264,4	script	bRO Warpra Helper#16	860,14,14,{ callfunc "QWS_Dungeon_Warpra",21,"Louyang Dungeon"; close; OnTouch: callfunc "QWS_Dungeon_GoPoof",21,"Louyang Dungeon"; end; }
mag_dun02,46,41,3	script	bRO Warpra Helper#17	860,14,14,{ callfunc "QWS_Dungeon_Warpra",22,"Magma Dungeon"; close; OnTouch: callfunc "QWS_Dungeon_GoPoof",22,"Magma Dungeon"; end; }
odin_tem01,115,148,3	script	bRO Warpra Helper#18	860,14,14,{ callfunc "QWS_Dungeon_Warpra",23,"Odin Temple"; close; OnTouch: callfunc "QWS_Dungeon_GoPoof",23,"Odin Temple"; end; }
orcsdun01,185,11,3	script	bRO Warpra Helper#19	860,14,14,{ callfunc "QWS_Dungeon_Warpra",24,"Orc Dungeon"; close; OnTouch: callfunc "QWS_Dungeon_GoPoof",24,"Orc Dungeon"; end; }
pay_dun03,162,143,3	script	bRO Warpra Helper#20	860,14,14,{ callfunc "QWS_Dungeon_Warpra",25,"Payon Dungeon"; close; OnTouch: callfunc "QWS_Dungeon_GoPoof",25,"Payon Dungeon"; end; }
moc_pryd02,101,95,3	script	bRO Warpra Helper#21	860,14,14,{ callfunc "QWS_Dungeon_Warpra",26,"Pyramid Dungeon"; close; OnTouch: callfunc "QWS_Dungeon_GoPoof",26,"Pyramid Dungeon"; end; }
in_sphinx2,274,268,1	script	bRO Warpra Helper#22	860,14,14,{ callfunc "QWS_Dungeon_Warpra",28,"Sphinx Dungeon"; close; OnTouch: callfunc "QWS_Dungeon_GoPoof",28,"Sphinx Dungeon"; end; }
tha_t07,111,162,3	script	bRO Warpra Helper#23	860,14,14,{ callfunc "QWS_Dungeon_Warpra",30,"Thanatos Tower"; close; OnTouch: callfunc "QWS_Dungeon_GoPoof",30,"Thanatos Tower"; end; }
treasure02,104,40,3	script	bRO Warpra Helper#24	860,14,14,{ callfunc "QWS_Dungeon_Warpra",29,"Sunken Ship Dungeon"; close; OnTouch: callfunc "QWS_Dungeon_GoPoof",29,"Sunken Ship Dungeon"; end; }
xmas_dun02,124,131,3	script	bRO Warpra Helper#25	860,14,14,{ callfunc "QWS_Dungeon_Warpra",32,"Toy Factory Dungeon"; close; OnTouch: callfunc "QWS_Dungeon_GoPoof",32,"Toy Factory Dungeon"; end; }
um_dun02,44,28,3	script	bRO Warpra Helper#26	860,14,14,{ callfunc "QWS_Dungeon_Warpra",34,"Umbala Dungeon"; close; OnTouch: callfunc "QWS_Dungeon_GoPoof",34,"Umbala Dungeon"; end; }
tur_dun02,162,23,3	script	bRO Warpra Helper#27	860,14,14,{ callfunc "QWS_Dungeon_Warpra",33,"Turtle Island Dungeon"; close; OnTouch: callfunc "QWS_Dungeon_GoPoof",33,"Turtle Island Dungeon"; end; }
prt_maze02,102,69,4	script	bRO Warpra Helper#28	860,14,14,{ callfunc "QWS_Dungeon_Warpra",17,"Hidden Dungeon"; close; OnTouch: callfunc "QWS_Dungeon_GoPoof",17,"Hidden Dungeon"; end; }
ra_san01,144,15,4	script	bRO Warpra Helper#29	860,14,14,{ callfunc "QWS_Dungeon_Warpra",27,"Rachel Sanctuary"; close; OnTouch: callfunc "QWS_Dungeon_GoPoof",27,"Rachel Sanctuary"; end; }
ecl_tdun02,65,89,4	script	bRO Warpra Helper#30	860,14,14,{ callfunc "QWS_Dungeon_Warpra",4,"Bifrost Tower"; close; OnTouch: callfunc "QWS_Dungeon_GoPoof",4,"Bifrost Tower"; end; }
thor_v03,36,274,4	script	bRO Warpra Helper#31	860,14,14,{ callfunc "QWS_Dungeon_Warpra",31,"Thor's Tower"; close; OnTouch: callfunc "QWS_Dungeon_GoPoof",31,"Thor's Tower"; end; }
abbey02,142,19,4	script	bRO Warpra Helper#32	860,14,14,{ callfunc "QWS_Dungeon_Warpra",10,"Cursed Monestary"; close; OnTouch: callfunc "QWS_Dungeon_GoPoof",10,"Cursed Monestary"; end; }
bra_dun02,267,262,4	script	bRO Warpra Helper#33	860,14,14,{ callfunc "QWS_Dungeon_Warpra",5,"Brasilis Dungeon"; close; OnTouch: callfunc "QWS_Dungeon_GoPoof",5,"Brasilis Dungeon"; end; }
dew_dun02,302,33,4	script	bRO Warpra Helper#34	860,14,14,{ callfunc "QWS_Dungeon_Warpra",1,"Dewata Dungeon"; close; OnTouch: callfunc "QWS_Dungeon_GoPoof",1,"Dewata Dungeon"; end; }
